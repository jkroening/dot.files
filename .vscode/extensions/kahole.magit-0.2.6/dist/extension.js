module.exports=function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=8)}([function(e,t){e.exports=require("vscode")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0);t.LineSplitterRegex=/\r?\n/g,t.FinalLineBreakRegex=/\r?\n$/g,t.StatusMessageDisplayTimeout=1e4,t.MagitUriScheme="magit",t.MagitDocumentSelector={scheme:t.MagitUriScheme,language:"magit"},t.BranchDecoration=n.window.createTextEditorDecorationType({color:"rgba(202,212,255,1.0)"}),t.RemoteBranchDecoration=n.window.createTextEditorDecorationType({color:"rgba(152,238,152,1.0)"})},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(8),a=i(0),s=i(26),r=i(13),c=i(14),m=i(10),d=i(1);t.default=class{static getMagitRepoThatContainsFile(e){for(const[t,i]of o.magitRepositories.entries())if(r.default.isDescendant(t,e.fsPath))return i;return o.gitApi.repositories.find(t=>r.default.isDescendant(t.rootUri.fsPath,e.fsPath))}static async getCurrentMagitRepo(e){var t;let i;if(e&&(i=o.magitRepositories.get(e.query)),!i){if(e&&(i=this.getMagitRepoThatContainsFile(e)),!i){if(1===o.gitApi.repositories.length)i=o.gitApi.repositories[0];else if(o.gitApi.repositories.length&&((null===(t=n.workspace.workspaceFolders)||void 0===t?void 0:t.length)&&(i=this.getMagitRepoThatContainsFile(n.workspace.workspaceFolders[0].uri)),!i)){const e=o.gitApi.repositories.map(e=>({label:e.rootUri.fsPath,meta:e}));e.push({label:"Init repo",meta:void 0}),i=await c.QuickMenuUtil.showMenu(e,"Which repository?")}if(!i){await a.commands.executeCommand("git.init");await new Promise(e=>setTimeout(e,1e3)),o.gitApi.repositories.length&&(i=o.gitApi.repositories[0])}}i&&o.magitRepositories.set(i.rootUri.fsPath,i)}return i}static getCurrentMagitRepoAndView(e){var t;return[o.magitRepositories.get(e.query),o.views.get(null!==(t=e.toString())&&void 0!==t?t:"")]}static async magitStatusAndUpdate(e){await s.internalMagitStatus(e),o.views.forEach(t=>t.needsUpdate?t.update(e.magitState):void 0)}static magitAnythingModified(e){var t,i;return void 0!==e.magitState&&(e.magitState.indexChanges.length>0||e.magitState.workingTreeChanges.length>0||(null!==(i=null===(t=e.magitState.mergeChanges)||void 0===t?void 0:t.length)&&void 0!==i?i:0)>0)}static async chooseRef(e,t,i=!1,n=!1,o=!0){var a,s,r,d;const u=[];return i&&(null===(s=null===(a=e.magitState)||void 0===a?void 0:a.HEAD)||void 0===s?void 0:s.name)&&u.push({label:e.magitState.HEAD.name,description:m.default.shortHash(e.magitState.HEAD.commit),meta:e.magitState.HEAD.name}),n&&u.push({label:"HEAD",description:m.default.shortHash(null===(d=null===(r=e.magitState)||void 0===r?void 0:r.HEAD)||void 0===d?void 0:d.commit),meta:"HEAD"}),u.push(...e.state.refs.filter(t=>{var i,n;return t.name!==(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.name)}).sort((e,t)=>e.type-t.type).map(e=>({label:e.name,description:m.default.shortHash(e.commit),meta:e.name}))),o?c.QuickMenuUtil.showMenuWithFreeform(u,t):c.QuickMenuUtil.showMenu(u,t)}static async chooseCommit(e,t){var i,n;const o=null!==(n=null===(i=e.magitState)||void 0===i?void 0:i.log.map(e=>({label:m.default.shortHash(e.hash),description:e.message.concat(" ").concat(e.hash),meta:e.hash})))&&void 0!==n?n:[];return c.QuickMenuUtil.showMenuWithFreeform(o,t)}static async chooseTag(e,t){const i=e.state.refs.filter(e=>2===e.type).map(e=>e.name);return a.window.showQuickPick(i,{placeHolder:t})}static async confirmAction(e,t=!1){const i=t?"yes or no":"y or n",n=await a.window.showInputBox({prompt:`${e} (${i})`});return!!(t&&"yes"===(null==n?void 0:n.toLowerCase())||!t&&"y"===(null==n?void 0:n.toLowerCase().charAt(0)))||(a.window.setStatusBarMessage("Abort",d.StatusMessageDisplayTimeout),!1)}static showDocumentColumn(){var e,t;const i=null!==(t=null===(e=a.window.activeTextEditor)||void 0===e?void 0:e.viewColumn)&&void 0!==t?t:0;return"same-column"===n.workspace.getConfiguration("magit").get("display-buffer-function")?i:i>a.ViewColumn.One?a.ViewColumn.One:a.ViewColumn.Two}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(45);var o;!function(e){e[e.None=0]="None",e[e.Error=1]="Error",e[e.Detailed=2]="Detailed"}(o=t.LogLevel||(t.LogLevel={})),t.gitRun=async function(e,t,i,a=o.Detailed){let s;a>o.None&&(s=n.default.logGitCommand(t));try{let r;return r=e._repository.repository.run?await e._repository.repository.run(t,i):await e._repository.repository.exec(t,i),a===o.Detailed&&s&&n.default.logGitResult(r,s),r}catch(e){throw a>o.None&&s&&n.default.logGitError(e,s),e}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(0),a=i(1);class s extends n.View{constructor(e=""){super(),this.textContent=e}render(e){this.retrieveFold();const t=this.textContent.split(a.LineSplitterRegex);return this.range=new o.Range(e,0,e+t.length-1,t[t.length-1].length),[this.folded?t[0]:this.textContent]}}t.TextView=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0);class o{static showMenu(e,t){return new Promise((i,a)=>{let s=e.commands.map(e=>({...e,description:"\t"+e.description}));if(t.switches){const i=t.switches.filter(e=>e.activated).map(e=>e.longName).join(" "),n=`[ ${i} ]`;s.push({label:"-",description:"\tSwitches "+(i.length>0?n:""),action:async t=>{const i=await o.showSwitchesMenu(t);return o.showMenu(e,{repository:t.repository,switches:i})}})}const r=n.window.createQuickPick();r.title=e.title,r.items=s;const c=r.onDidChangeValue(async e=>{"q"===r.value&&(r.dispose(),c.dispose(),m.dispose(),i());const n=r.items.filter(e=>e.label===r.value);if(n.length>0){r.value="",r.dispose(),c.dispose(),m.dispose();try{await n[0].action(t),i()}catch(e){a(e)}}}),m=r.onDidAccept(async()=>{if(r.activeItems.length>0){const e=r.activeItems[0];r.dispose(),c.dispose(),m.dispose();try{await e.action(t),i()}catch(e){a(e)}}});r.show()})}static showSwitchesMenu(e){return new Promise((t,i)=>{if(!e.switches)return i("No switches present in menu");const a=n.window.createQuickPick();a.canSelectMany=!0,a.title="Switches (type shortname of switches you want to enable)",a.items=e.switches.map(e=>({label:e.shortName,detail:e.longName,description:"\t"+e.description,picked:e.activated})),a.selectedItems=a.items.filter(e=>e.picked);const s=a.onDidChangeValue(e=>{if("q"===a.value)return a.dispose();if("-"===a.value)return;let t=a.value;a.value="",a.items=a.items.map(e=>({...e,picked:o.matchesSwitch(t,e.label)?!e.picked:e.picked})),a.selectedItems=a.items.filter(e=>e.picked)}),r=a.onDidAccept(()=>{const i=e.switches.map(e=>({...e,activated:void 0!==a.selectedItems.find(t=>t.label===e.shortName)}));a.dispose(),s.dispose(),r.dispose(),t(i)});a.show()})}static matchesSwitch(e,t){return e===t||e===t.replace("-","")}static switchesToArgs(e){var t;return null!==(t=null==e?void 0:e.filter(e=>e.activated).map(e=>e.longName))&&void 0!==t?t:[]}}t.MenuUtil=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);!function(e){e.Untracked="Untracked files",e.Unstaged="Unstaged changes",e.Staged="Staged changes",e.Stashes="Stashes",e.RecentCommits="Recent commits",e.UnmergedInto="Unmerged into",e.UnpushedTo="Unpushed to",e.UnpulledFrom="Unpulled from",e.Merging="Merging",e.CherryPicking="Cherry Picking",e.Reverting="Reverting",e.HEAD="HEAD",e.Branches="Branches",e.Remote="Remote",e.Tags="Tags"}(t.Section||(t.Section={}));class o extends n.TextView{constructor(e,t,i){super(`${e.valueOf()}${i?" "+i:""}${t?" ("+t+")":""}`),this._section=e}onClicked(){}}t.SectionHeaderView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=new Map;t.View=class{constructor(){this._range=new n.Range(0,0,0,0),this._folded=!1,this.subViews=[],this.isFoldable=!1,this.foldedByDefault=!1,this.isHighlightable=!0}get folded(){return this._folded}set folded(e){this.id&&o.set(this.id,e),this._folded=e}get range(){return this.folded?new n.Range(this._range.start,new n.Position(this._range.start.line,300)):this._range}set range(e){this._range=e}retrieveFold(){var e;this.isFoldable&&this.id&&(this._folded=null!==(e=o.get(this.id))&&void 0!==e?e:this.foldedByDefault)}render(e){this.retrieveFold();let t=e;const i=[];return this.subViews.forEach(e=>{const n=e.render(t);t+=e.range.end.line-e.range.start.line+1,i.push(...n)}),this.range=new n.Range(e,0,t-1,i.length>0?i[i.length-1].length:0),this.folded?i.slice(0,1):i}get id(){}onClicked(){return this}click(e){if(this.range.contains(e)){const t=this.onClicked();if(this.folded)return t;const i=this.subViews.map(t=>t.click(e)).filter(e=>e);return i.length>0?i[0]:t}}addSubview(...e){this.subViews.push(...e)}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(34),a=i(47),s=i(48),r=i(53),c=i(26),m=i(27),d=i(15),u=i(28),l=i(62),g=i(63),h=i(64),p=i(1),f=i(65),w=i(66),v=i(67),y=i(25),b=i(68),S=i(69),C=i(70),x=i(71),M=i(73),k=i(2),P=i(74),R=i(75),D=i(32),T=i(78),E=i(79),A=i(80),V=i(23),U=i(81),I=i(84),L=i(29),H=i(33),$=i(85),_=i(31);t.magitRepositories=new Map,t.views=new Map,t.processLog=[],t.activate=function(e){const i=n.extensions.getExtension("vscode.git").exports;if(!i.enabled)throw new Error("vscode.git Git extension not enabled");e.subscriptions.push(i.onDidChangeEnablement(e=>{if(!e)throw new Error("vscode.git Git extension was disabled")})),t.gitApi=i.getAPI(1),t.logPath=e.logPath,e.subscriptions.push(t.gitApi.onDidCloseRepository(e=>{t.magitRepositories.delete(e.rootUri.fsPath)}));const F=new o.default,j=new g.default,B=n.Disposable.from(n.workspace.registerTextDocumentContentProvider(p.MagitUriScheme,F),n.languages.registerDocumentHighlightProvider(p.MagitDocumentSelector,j));e.subscriptions.push(F,B),e.subscriptions.push(n.commands.registerCommand("magit.status",c.magitStatus)),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.help",h.Command.primeRepo(r.magitHelp,!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.commit",h.Command.primeRepo(d.magitCommit))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.refresh",h.Command.primeRepo(c.magitRefresh))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.pulling",h.Command.primeRepo(w.pulling))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.pushing",h.Command.primeRepo(a.pushing))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.stashing",h.Command.primeRepo(v.stashing))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.fetching",h.Command.primeRepo(f.fetching))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.branching",h.Command.primeRepo(s.branching))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.merging",h.Command.primeRepo(S.merging))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.rebasing",h.Command.primeRepo(C.rebasing))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.resetting",h.Command.primeRepo(T.resetting))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.reset-mixed",h.Command.primeRepo(T.resetMixed))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.reset-hard",h.Command.primeRepo(T.resetHard))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.remoting",h.Command.primeRepo(P.remoting))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.logging",h.Command.primeRepo(R.logging))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.show-refs",h.Command.primeRepo(s.showRefs))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.diffing",h.Command.primeRepo(V.diffing))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.tagging",h.Command.primeRepo(E.tagging))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.cherry-picking",h.Command.primeRepo(L.cherryPicking))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.reverting",h.Command.primeRepo(H.reverting))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.ignoring",h.Command.primeRepo(U.ignoring))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.running",h.Command.primeRepo(I.running))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.worktree",h.Command.primeRepo(A.worktree))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.process-log",h.Command.primeRepo(D.processView,!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.visit-at-point",h.Command.primeRepoAndView(m.magitVisitAtPoint,!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.apply-at-point",h.Command.primeRepoAndView(y.magitApplyEntityAtPoint))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.discard-at-point",h.Command.primeRepoAndView(b.magitDiscardAtPoint))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.reverse-at-point",h.Command.primeRepoAndView($.reverseAtPoint))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.stage",h.Command.primeRepoAndView(u.magitStage))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.stage-all",h.Command.primeRepoAndView(u.magitStageAll))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.unstage",h.Command.primeRepoAndView(u.magitUnstage))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.unstage-all",h.Command.primeRepoAndView(u.magitUnstageAll))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.file-popup",h.Command.primeFileCommand(x.filePopup))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.blame-file",h.Command.primeFileCommand(_.blameFile))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.diff-file",h.Command.primeFileCommand(V.diffFile))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.stage-file",h.Command.primeFileCommand(u.stageFile))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.unstage-file",h.Command.primeFileCommand(u.unstageFile))),e.subscriptions.push(n.commands.registerCommand("magit.dispatch",async()=>{const e=n.window.activeTextEditor,i=await k.default.getCurrentMagitRepo(null==e?void 0:e.document.uri);if(i){const e=M.DispatchView.encodeLocation(i);return t.views.set(e.toString(),new M.DispatchView(e)),n.workspace.openTextDocument(e).then(e=>n.window.showTextDocument(e,{viewColumn:k.default.showDocumentColumn(),preview:!1}))}})),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.toggle-fold",h.Command.primeRepoAndView(async(e,t)=>{const i=t.click(n.window.activeTextEditor.selection.active);(null==i?void 0:i.isFoldable)&&(i.folded=!i.folded,t.triggerUpdate())},!1))),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.quit",l.quitMagitView)),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.save-and-close-editor",l.saveClose)),e.subscriptions.push(n.commands.registerTextEditorCommand("magit.clear-and-abort-editor",l.clearSaveClose))},t.deactivate=function(){}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);class o extends n.TextView{constructor(e=1){super("\n".repeat(e-1))}}t.LineBreakView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(1);class o{static diffToHunks(e,t,i){const o=e.indexOf("@@"),a=e.slice(0,o);return e.replace(n.FinalLineBreakRegex,"").slice(o).split(/\n(?=^@@.*@@.*$)/gm).map(e=>({diff:e,diffHeader:a,uri:t,section:i}))}static parseMergeStatus(e,t){var i;const o=null===(i=t.match(/'(.*?)'/g))||void 0===i?void 0:i.map(e=>e.slice(1,e.length-1)),a=e.replace(n.FinalLineBreakRegex,"");if(o)return[a,o]}static parseRevListLeftRight(e){const t=[],i=[];return e.replace(n.FinalLineBreakRegex,"").split(n.LineSplitterRegex).forEach(e=>{switch(e.charAt(0)){case"<":t.push(e.slice(1));break;case">":i.push(e.slice(1))}}),[t,i]}static parseSequencerTodo(e){return e?e.split(n.LineSplitterRegex).filter(e=>"#"!==e.charAt(0)).map(e=>{const[t,i,...n]=e.split(" ");return{hash:i,message:n.join(" "),parents:[]}}):[]}static commitDetailTextToCommit(e){const t=/(?:^From )(.*?) /gm.exec(e),i=/(?:^Subject: )(.*?)$/gm.exec(e),n=/(?:^From: )(.*?) </gm.exec(e);return{hash:(null==t?void 0:t.length)&&(null==t?void 0:t.length)>1?t[1]:"",message:(null==i?void 0:i.length)&&(null==i?void 0:i.length)>1?i[1]:"",parents:[],authorEmail:(null==n?void 0:n.length)&&(null==n?void 0:n.length)>1?n[1]:""}}static remoteBranchFullNameToSegments(e){if(e){const[t,...i]=e.split("/");return[t,i.join("/")]}return["",""]}static shortHash(e){return e?e.slice(0,7):""}static shortCommitMessage(e){return e?e.split("\n")[0]:""}static generatePatchFromChangeHunkView(e,t,i=!1){if(!t||t.isEmpty)return`${e.changeHunk.diffHeader}${e.changeHunk.diff}\n`;let o="";const a=e.changeHunk,s=e.range.start.translate(1),r=e.range.with(s).intersection(t);if(r){const[e,...t]=a.diff.split(n.LineSplitterRegex),c=r.start.line-s.line,m=r.end.line-s.line,d=/^\+.*/,u=/^-.*/,l=new Set;let g=0,h=0;for(let e=c;e<=m;e++){const i=t[e];if(d.test(i))g++;else{if(!u.test(i))continue;h++}l.add(e)}let p=0,f=0;const w=[];t.forEach((e,t)=>{d.test(e)&&!l.has(t)?(p++,i&&w.push(" "+e.slice(1))):u.test(e)&&!l.has(t)?(f++,i||w.push(" "+e.slice(1))):w.push(e)});const v=w.join("\n"),y=/(?<=,)\d+(?= \+)/g,b=/(?<=,)\d+(?= @@)/g,S=Number.parseInt(e.match(y)[0].toString());let C,x=S+(g-h);i?(C=e.replace(y,(S+p-f).toString()),C=C.replace(b,(x+p-f).toString())):C=e.replace(b,x.toString()),o=`${C}\n${v}`}else o=a.diff;return o.split(n.LineSplitterRegex).length<=1&&(o=a.diff),`${a.diffHeader}${o}\n`}static truncate(e,t){return e.length>t?e.substring(0,t-3)+"...":e}static formatError(e){var t,i;let n=null!==(i=null!==(t=e.friendlyMessage)&&void 0!==t?t:e.stderr)&&void 0!==i?i:e.message;return n=n.replace("error: ",""),o.truncate(n,350)}}t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7);class o extends n.View{constructor(e){super(),this.uri=e,this.needsUpdate=!0}triggerUpdate(){this.emitter&&this.emitter.fire(this.uri)}}t.DocumentView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(6),a=i(4),s=i(9),r=i(10);class c extends n.View{constructor(e,t){super(),this.section=e,this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(e),...t.map(e=>new m(e)),new s.LineBreakView]}get id(){return this.section.toString()}}t.CommitSectionView=c;class m extends a.TextView{constructor(e,t){super(`${t?t+" ":""}${r.default.shortHash(e.hash)} ${r.default.shortCommitMessage(e.message)}`),this.commit=e}}t.CommitItemView=m},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(24);class o{static isWindowsPath(e){return/^[a-zA-Z]:\\/.test(e)}static isDescendant(e,t){return e===t||(e.charAt(e.length-1)!==n.sep&&(e+=n.sep),o.isWindowsPath(e)&&(e=e.toLowerCase(),t=t.toLowerCase()),t.startsWith(e))}static uriPathRelativeTo(e,t){return e.path.slice(t.path.length+1)}static fileName(e){let t=e.fsPath.split(/[/\\]/g);return 0===t[t.length-1].length&&t.pop(),t.length>0?t[t.length-1]:""}static fileExtension(e){const t=e.split(".");return t.length>0?t[t.length-1]:""}}t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0);t.QuickMenuUtil=class{static showMenu(e,t){return new Promise((i,o)=>{const a=n.window.createQuickPick();a.items=e,a.matchOnDescription=!0,a.placeholder=t;const s=a.onDidAccept(async()=>{if(a.activeItems.length>0){const e=a.activeItems[0];i(e.meta),a.hide()}}),r=a.onDidHide(()=>{i(),a.dispose(),s.dispose(),r.dispose()});a.show()})}static showMenuWithFreeform(e,t){return new Promise((i,o)=>{const a=n.window.createQuickPick();a.items=e,a.placeholder=t,a.matchOnDescription=!0;const s=a.onDidAccept(async()=>{if(a.activeItems.length>0){const e=a.activeItems[0];i(e.meta)}else i(a.value);a.hide()}),r=a.onDidHide(()=>{i(),a.dispose(),s.dispose(),r.dispose()});a.show()})}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(0),a=i(1),s=i(60),r=i(3),c=i(5),m=i(2),d=i(23),u=i(6),l=i(24),g={title:"Committing",commands:[{label:"c",description:"Commit",action:h},{label:"a",description:"Amend",action:e=>h(e,["--amend"])},{label:"e",description:"Extend",action:e=>h(e,["--amend","--no-edit"])},{label:"w",description:"Reword",action:e=>h(e,["--amend","--only"])},{label:"f",description:"Fixup",action:e=>p(e)}]};async function h({repository:e,switches:t},i=[]){return f(e,["commit",...c.MenuUtil.switchesToArgs(t),...i])}async function p({repository:e,switches:t}){const i=await m.default.chooseCommit(e,"Fixup commit");if(i){const n=["commit",...c.MenuUtil.switchesToArgs(t),"--fixup",i];return await r.gitRun(e,n)}throw new Error("No commit chosen to fixup")}async function f(e,t,{showStagedChanges:i,updatePostCommitTask:c,editor:g,propagateErrors:h}={showStagedChanges:!0}){let p,f;try{f=n.window.setStatusBarMessage("Type C-c C-c to finish, or C-c C-k to cancel"),i&&(p=d.showDiffSection(e,u.Section.Staged,!0));let h=o.env.appName.includes("Insider"),w=o.env.appName.includes("Codium"),v="darwin"===process.platform,y="code";w&&!v&&(y="codium"),h&&!v&&(y+="-insiders"),y=v?s.execPath.split(/(?<=\.app)/)[0]+"/Contents/Resources/app/bin/"+y:l.join(l.dirname(s.execPath),"bin",y);const b={GIT_EDITOR:`"${y}" --wait`};g&&(b[g]=`"${y}" --wait`);const S=r.gitRun(e,t,{env:b});c&&(await new Promise(e=>setTimeout(e,100)),m.default.magitStatusAndUpdate(e));const C=await S;f.dispose(),n.window.setStatusBarMessage("Git finished: "+C.stdout.replace(a.LineSplitterRegex," "),a.StatusMessageDisplayTimeout)}catch(e){if(f&&f.dispose(),n.window.setStatusBarMessage("Commit canceled.",a.StatusMessageDisplayTimeout),h)throw e}finally{const e=await p;if(e)for(const t of n.window.visibleTextEditors)if(t.document.uri===e.document.uri){const t=m.default.showDocumentColumn();await n.window.showTextDocument(e.document,{viewColumn:t,preview:!1}),await n.commands.executeCommand("workbench.action.closeActiveEditor"),n.commands.executeCommand("workbench.action.navigate"+(t===n.ViewColumn.One?"Right":"Left"))}}}t.magitCommit=async function(e){return c.MenuUtil.showMenu(g,{repository:e,switches:[{shortName:"-a",longName:"--all",description:"Stage all modified and deleted files"},{shortName:"-e",longName:"--allow-empty",description:"Allow empty commit"}]})},t.commit=h,t.fixup=p,t.runCommitLikeCommand=f},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(6),a=i(4),s=i(9);class r extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Stashes,e.length),...e.map(e=>new c(e)),new s.LineBreakView]}get id(){return o.Section.Stashes.toString()}}t.StashSectionView=r;class c extends a.TextView{constructor(e){super(`stash@{${e.index}} ${e.description}`),this.stash=e}}t.StashItemView=c},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);class o extends n.TextView{constructor(e){super("  "+e.name),this.ref=e}get id(){var e;return(null===(e=this.ref.name)||void 0===e?void 0:e.toString())+this.ref.type.toString()}}t.TagListingView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);class o extends n.TextView{constructor(e,t=!1){super(`${t?"*":" "} ${e.name}`),this.ref=e}get id(){var e;return(null===(e=this.ref.name)||void 0===e?void 0:e.toString())+this.ref.type.toString()}}t.BranchListingView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);class o extends n.TextView{constructor(e){var t,i;super(),this.ref=e;const[n,...o]=null!==(i=null===(t=e.name)||void 0===t?void 0:t.split("/"))&&void 0!==i?i:[],a=o.join("/");this.textContent="  "+a}get id(){var e;return(null===(e=this.ref.name)||void 0===e?void 0:e.toString())+this.ref.type.toString()}}t.RemoteBranchListingView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(21),a=i(6),s=i(9);class r extends n.View{constructor(e,t,i=""){super(),this.section=e,this.changes=t,this.context=i,this.isFoldable=!0,this.subViews=[new a.SectionHeaderView(e,t.length),...t.map(e=>new o.ChangeView(e,i)),new s.LineBreakView]}get id(){return this.section.toString()+this.context}}t.ChangeSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(22),a=i(36);class s extends n.View{constructor(e,t=""){super(),this.change=e,this.context=t,this.isFoldable=!0,this.foldedByDefault=!0,this.addSubview(new a.ChangeHeaderView(e)),this.change.hunks&&this.addSubview(...this.change.hunks.map(e=>new o.HunkView(e)))}get id(){var e;return this.change.uri.toString()+(null===(e=this.change.section)||void 0===e?void 0:e.toString())+this.context}}t.ChangeView=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);class o extends n.TextView{constructor(e){super(e.diff),this.changeHunk=e,this.isFoldable=!0}get id(){return this.changeHunk.diff}}t.HunkView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(3),a=i(8),s=i(57),r=i(5),c=i(14),m=i(58),d=i(2),u=i(59),l=i(27),g=i(6),h={title:"Diffing",commands:[{label:"r",description:"Diff range",action:async function({repository:e}){var t,i,o,a;let s=await n.window.showInputBox({prompt:`Diff for range (${null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name})`});s||(s=null===(a=null===(o=e.magitState)||void 0===o?void 0:o.HEAD)||void 0===a?void 0:a.name);if(s){return p(e,s,[s])}}},{label:"p",description:"Diff paths",action:async function({repository:e}){const t=await n.window.showInputBox({prompt:"First file",value:e.rootUri.fsPath});if(t){const i=await n.window.showInputBox({prompt:"Second file",value:e.rootUri.fsPath});if(i)return p(e,"files",["--no-index",t,i])}}},{label:"u",description:"Diff unstaged",action:async function({repository:e}){return f(e,g.Section.Unstaged)}},{label:"s",description:"Diff staged",action:async function({repository:e}){return f(e,g.Section.Staged)}},{label:"w",description:"Diff worktree",action:async function({repository:e}){return p(e,"worktree",["HEAD"])}},{label:"c",description:"Show commit",action:async function({repository:e}){const t=await d.default.chooseRef(e,"Show commit",!0,!0);if(t)return l.visitCommit(e,t)}},{label:"t",description:"Show stash",action:async function({repository:e}){var t,i;const n=null!==(i=null===(t=e.magitState)||void 0===t?void 0:t.stashes.map(e=>({label:`stash@{${e.index}}`,meta:e})))&&void 0!==i?i:[],o=await c.QuickMenuUtil.showMenu(n);if(o)return w(e,o)}}]};async function p(e,t,i=[]){const r=await o.gitRun(e,["diff",...i]),c=s.DiffView.encodeLocation(e,t);return a.views.set(c.toString(),new s.DiffView(c,r.stdout)),n.workspace.openTextDocument(c).then(e=>n.window.showTextDocument(e,{viewColumn:d.default.showDocumentColumn(),preview:!1}))}async function f(e,t,i=!1){const o=u.default.encodeLocation(e);return a.views.set(o.toString(),new u.default(o,e.magitState,t)),n.workspace.openTextDocument(o).then(e=>n.window.showTextDocument(e,{viewColumn:d.default.showDocumentColumn(),preserveFocus:i,preview:!1}))}async function w(e,t){const i=m.StashDetailView.encodeLocation(e,t),s=(await o.gitRun(e,["stash","show","-p",`stash@{${t.index}}`])).stdout;return a.views.set(i.toString(),new m.StashDetailView(i,t,s)),n.workspace.openTextDocument(i).then(e=>n.window.showTextDocument(e,{viewColumn:d.default.showDocumentColumn(),preview:!1}))}t.diffing=async function(e){return r.MenuUtil.showMenu(h,{repository:e})},t.showDiffSection=f,t.showStashDetail=w,t.diffFile=async function(e,t,i=!1){const r=["diff"];i&&r.push("--cached"),r.push(t.fsPath);const c=await o.gitRun(e,r),m=s.DiffView.encodeLocation(e,t.path);return a.views.set(m.toString(),new s.DiffView(m,c.stdout)),n.workspace.openTextDocument(m).then(e=>n.window.showTextDocument(e,{preview:!1}))}},function(e,t){e.exports=require("path")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(12),a=i(3),s=i(16),r=i(29),c=i(18),m=i(19),d=i(17),u=i(2);t.magitApplyEntityAtPoint=async function(e,t){const i=t.click(n.window.activeTextEditor.selection.active);if(i instanceof o.CommitItemView){const t=i.commit;return r.cherryPick(e,t.hash,{noCommit:!0})}if(i instanceof c.BranchListingView||i instanceof m.RemoteBranchListingView||i instanceof d.TagListingView){const t=i.ref;if(t.commit)return r.cherryPick(e,t.commit,{noCommit:!0})}else{if(i instanceof s.StashItemView){const t=["stash","apply","--index",`stash@{${i.stash.index}}`];return a.gitRun(e,t)}{const t=await u.default.chooseRef(e,"Apply changes from commit");if(t)return r.cherryPick(e,t,{noCommit:!0})}}},t.apply=async function(e,t,{index:i,reverse:n}){const o=["apply","--ignore-space-change"];return i&&o.push("--cached"),n&&o.push("--reverse"),a.gitRun(e,o,{input:t})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(8),a=i(13),s=i(10),r=i(2),c=i(35),m=i(6),d=i(3),u=i(1),l=i(46);async function g(e){var t,i,o,r,c,g,p,f;await e.status();const w=e.rootUri+"/.git/",v=e._repository.getStashes(),y=(null===(t=e.state.HEAD)||void 0===t?void 0:t.commit)?e.log({maxEntries:100}):Promise.resolve([]);(null===(i=e.state.HEAD)||void 0===i?void 0:i.commit)&&l.getCommit(e,null===(o=e.state.HEAD)||void 0===o?void 0:o.commit);let b=[],S=[];if((null===(r=e.state.HEAD)||void 0===r?void 0:r.ahead)||(null===(c=e.state.HEAD)||void 0===c?void 0:c.behind)){const t=e.state.HEAD.name,i=["rev-list","--left-right",`${t}...${t}@{u}`],n=(await d.gitRun(e,i,{},d.LogLevel.None)).stdout;[b,S]=s.default.parseRevListLeftRight(n),b.map(t=>l.getCommit(e,t)),S.map(t=>l.getCommit(e,t))}const C=e.state.workingTreeChanges.filter(e=>7!==e.status),x=e.state.workingTreeChanges.length>C.length?(await d.gitRun(e,["ls-files","--others","--exclude-standard","--directory","--no-empty-directory"])).stdout.replace(u.FinalLineBreakRegex,"").split(u.LineSplitterRegex).map(t=>{const i=n.Uri.parse(e.rootUri.fsPath+"/"+t);return{originalUri:i,renameUri:i,uri:i,status:7,relativePath:a.default.uriPathRelativeTo(i,e.rootUri),section:m.Section.Untracked}}):[],M=Promise.all(C.map(async t=>{const i=await e.diffWithHEAD(t.uri.fsPath);return h(e,t,m.Section.Unstaged,i)})),k=Promise.all(e.state.indexChanges.map(async t=>{const i=await e.diffIndexWithHEAD(t.uri.fsPath);return h(e,t,m.Section.Staged,i)})),P=Promise.all(e.state.mergeChanges.map(async t=>{const i=await e.diffWithHEAD(t.uri.fsPath);return h(e,t,m.Section.Unstaged,i)})),R=n.Uri.parse(w+"sequencer/todo"),D=n.Uri.parse(w+"sequencer/head"),T=async function(e,t){const i=n.Uri.parse(t+"MERGE_HEAD"),o=n.Uri.parse(t+"MERGE_MSG"),a=n.workspace.fs.readFile(i).then(e=>e.toString(),e=>{}),r=n.workspace.fs.readFile(o).then(e=>e.toString(),e=>{});try{const t=await a,i=await r;if(t&&i){const n=s.default.parseMergeStatus(t,i);if(n){const[t,i]=n,o=(await d.gitRun(e,["rev-list","HEAD.."+t])).stdout.replace(u.FinalLineBreakRegex,"").split(u.LineSplitterRegex);return{mergingBranches:i,commits:await Promise.all(o.map(t=>l.getCommit(e,t)))}}}}catch(e){}}(e,w),E=async function(e,t,i){var o;try{if(e.state.rebaseCommit){let a,r=!1;const c=n.Uri.parse(t+"rebase-apply/"),m=n.Uri.parse(t+"rebase-merge/");await n.workspace.fs.readDirectory(c).then(e=>e.length,e=>{})?a=c:(r=!0,a=m);const d=n.Uri.parse(a+"head-name"),g=n.Uri.parse(a+"onto"),h=n.workspace.fs.readFile(d).then(e=>e.toString().replace(u.FinalLineBreakRegex,"")),p=n.workspace.fs.readFile(g).then(e=>e.toString().replace(u.FinalLineBreakRegex,""));let f,w;if(r)f=await n.workspace.fs.readFile(n.Uri.parse(t+"rebase-merge/msgnum")).then(e=>e.toString().replace(u.FinalLineBreakRegex,"")).then(Number.parseInt),w=n.workspace.fs.readFile(n.Uri.parse(t+"rebase-merge/git-rebase-todo")).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{}).then(s.default.parseSequencerTodo).then(e=>e.reverse());else{const e=n.workspace.fs.readFile(n.Uri.parse(t+"rebase-apply/last")).then(e=>e.toString().replace(u.FinalLineBreakRegex,"")).then(Number.parseInt);f=await n.workspace.fs.readFile(n.Uri.parse(t+"rebase-apply/next")).then(e=>e.toString().replace(u.FinalLineBreakRegex,"")).then(Number.parseInt);const i=[];for(let t=await e;t>f;t--)i.push(t);w=Promise.all(i.map(e=>n.workspace.fs.readFile(n.Uri.parse(t+"rebase-apply/"+e.toString().padStart(4,"0"))).then(e=>e.toString().replace(u.FinalLineBreakRegex,"")).then(s.default.commitDetailTextToCommit)))}const v=await l.getCommit(e,await p),y=e.state.refs.find(e=>e.commit===v.hash&&1!==e.type);y.commitDetails=v;const b=(await i).slice(0,f-1),S=null!==(o=await w)&&void 0!==o?o:[];return{currentCommit:e.state.rebaseCommit,origBranchName:(await h).split("/")[2],ontoBranch:y,doneCommits:b,upcomingCommits:S}}}catch(e){}}(e,w,y),A=async function(e,t,i,o){try{const a=n.Uri.parse(t+"CHERRY_PICK_HEAD"),r=await n.workspace.fs.readFile(a).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{});if(r){const t=n.workspace.fs.readFile(i).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{}),a=n.workspace.fs.readFile(o).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{}),c=await t,m=await a,d=l.getCommit(e,r),g=m?l.getCommit(e,m):l.getCommit(e,e.state.HEAD.commit);return{originalHead:await g,currentCommit:await d,upcomingCommits:s.default.parseSequencerTodo(c).slice(1).reverse()}}}catch(e){}}(e,w,R,D),V=async function(e,t,i,o){try{const a=n.Uri.parse(t+"REVERT_HEAD"),r=await n.workspace.fs.readFile(a).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{});if(r){const t=n.workspace.fs.readFile(i).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{}),a=n.workspace.fs.readFile(o).then(e=>e.toString().replace(u.FinalLineBreakRegex,""),e=>{}),c=await t,m=await a,d=l.getCommit(e,r),g=m?l.getCommit(e,m):l.getCommit(e,e.state.HEAD.commit);return{originalHead:await g,currentCommit:await d,upcomingCommits:s.default.parseSequencerTodo(c).slice(1).reverse()}}}catch(e){}}(e,w,R,D),U=e.state.HEAD;if(null==U?void 0:U.commit){U.commitDetails=await l.getCommit(e,U.commit),U.tag=e.state.refs.find(e=>(null==U?void 0:U.commit)===e.commit&&2===e.type);try{if(null===(g=U.upstream)||void 0===g?void 0:g.remote){const t=U.upstream.remote,i=null===(p=e.state.refs.find(e=>{var i;return e.remote===t&&e.name===`${t}/${null===(i=U.upstream)||void 0===i?void 0:i.name}`}))||void 0===p?void 0:p.commit,n=i?l.getCommit(e,i):void 0,o=e.getConfig(`branch.${U.upstream.name}.rebase`);U.upstreamRemote=U.upstream,U.upstreamRemote.commit=await n,U.upstreamRemote.commitsAhead=await Promise.all(b.map(t=>l.getCommit(e,t))),U.upstreamRemote.commitsBehind=await Promise.all(S.map(t=>l.getCommit(e,t))),U.upstreamRemote.rebase="true"===await o}}catch(e){}U.pushRemote=await async function(e){var t;try{const i=e.state.HEAD,n=await e.getConfig(`branch.${i.name}.pushRemote`);if((null==i?void 0:i.name)&&n){const o=["rev-list","--left-right",`${i.name}...${n}/${i.name}`],a=(await d.gitRun(e,o,{},d.LogLevel.None)).stdout,[r,c]=s.default.parseRevListLeftRight(a),m=await Promise.all(r.map(t=>l.getCommit(e,t))),u=await Promise.all(c.map(t=>l.getCommit(e,t))),g=null===(t=e.state.refs.find(e=>e.remote===n&&e.name===`${n}/${i.name}`))||void 0===t?void 0:t.commit,h=g?l.getCommit(e,g):Promise.resolve(void 0);return{remote:n,name:i.name,commit:await h,commitsAhead:m,commitsBehind:u}}}catch(e){}}(e)}const I=e.state.refs.filter(e=>1===e.type),L=e.state.remotes.map(e=>({...e,branches:I.filter(t=>t.remote===e.name)}));e.magitState={HEAD:U,stashes:await v,log:await y,workingTreeChanges:await M,indexChanges:await k,mergeChanges:await P,untrackedFiles:x,rebasingState:await E,mergingState:await T,cherryPickingState:await A,revertingState:await V,branches:e.state.refs.filter(e=>0===e.type),remotes:L,tags:e.state.refs.filter(e=>2===e.type),latestGitError:null===(f=e.magitState)||void 0===f?void 0:f.latestGitError}}function h(e,t,i,n){const o=t;return o.section=i,o.relativePath=a.default.uriPathRelativeTo(t.uri,e.rootUri),o.hunks=n?s.default.diffToHunks(n,t.uri,i):void 0,o}t.magitRefresh=async function(){},t.magitStatus=async function(){const e=n.window.activeTextEditor,t=await r.default.getCurrentMagitRepo(null==e?void 0:e.document.uri);if(t){for(const[i,a]of null!==o.views&&void 0!==o.views?o.views:[])if(a instanceof c.default){if(await r.default.magitStatusAndUpdate(t),(null==e?void 0:e.document.uri.path)===c.default.UriPath)return;return n.workspace.openTextDocument(a.uri).then(e=>n.window.showTextDocument(e,{viewColumn:r.default.showDocumentColumn(),preview:!1}))}await g(t);const i=c.default.encodeLocation(t);return o.views.set(i.toString(),new c.default(i,t.magitState)),n.workspace.openTextDocument(i).then(e=>n.window.showTextDocument(e,{viewColumn:r.default.showDocumentColumn(),preview:!1}))}},t.internalMagitStatus=g},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(2),a=i(12),s=i(3),r=i(56),c=i(8),m=i(16),d=i(21),u=i(22),l=i(18),g=i(19),h=i(17),p=i(23),f=i(1);async function w(e,t){const i=e.changeHunk,a=await n.workspace.openTextDocument(i.uri),s=await n.window.showTextDocument(a,{viewColumn:o.default.showDocumentColumn(),preview:!1});try{const o=i.diff.match(/(?<=\+)\d+(?=,)/g);if(null==o?void 0:o.length){const a=Number.parseInt(o[0].toString())-1;let c=0,m=0;if(t&&t.line>e.range.start.line)c=t.line-(e.range.start.line+1),m=t.character>0?t.character-1:t.character;else{const e=i.diff.split(/^\+/gm);if(e.length>1)c=e[0].split(f.LineSplitterRegex).length-2;else{const e=i.diff.split(/^-/gm);e.length&&(c=e[0].split(f.LineSplitterRegex).length-2)}m=0}const d=i.diff.split(f.LineSplitterRegex).slice(0,c+1).filter(e=>"-"===e.charAt(0)).length,u=new n.Position(a+c-d,m);var r=new n.Selection(u,u);s.revealRange(new n.Range(u,u),n.TextEditorRevealType.InCenterIfOutsideViewport),s.selection=r}}catch(e){}}async function v(e,t){const i={hash:t,message:"",parents:[],diff:(await s.gitRun(e,["show",t])).stdout},a=r.CommitDetailView.encodeLocation(e,i.hash);c.views.set(a.toString(),new r.CommitDetailView(a,i)),n.workspace.openTextDocument(a).then(e=>n.window.showTextDocument(e,{viewColumn:o.default.showDocumentColumn(),preview:!1}))}t.magitVisitAtPoint=async function(e,t){var i,s;const r=null===(i=n.window.activeTextEditor)||void 0===i?void 0:i.selection.active;if(!r)return;const c=t.click(r);if(c instanceof d.ChangeView){const e=c.change;return(null===(s=e.hunks)||void 0===s?void 0:s.length)?w(c.subViews.find(e=>e instanceof u.HunkView)):n.workspace.openTextDocument(e.uri).then(e=>n.window.showTextDocument(e,{viewColumn:o.default.showDocumentColumn(),preview:!1}))}if(c instanceof u.HunkView)return w(c,r);if(c instanceof a.CommitItemView){return v(e,c.commit.hash)}if(c instanceof l.BranchListingView||c instanceof g.RemoteBranchListingView||c instanceof h.TagListingView){return v(e,c.ref.commit)}if(c instanceof m.StashItemView){const t=c.stash;return p.showStashDetail(e,t)}n.window.setStatusBarMessage("There is no thing at point that could be visited",f.StatusMessageDisplayTimeout)},t.visitCommit=v},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(22),a=i(21),s=i(2),r=i(13),c=i(20),m=i(6),d=i(3),u=i(14),l=i(25),g=i(10),h=i(1),p=i(61);async function f(e,t,i){var s,d,p,f;if(i instanceof o.HunkView){if(i.changeHunk.section!==m.Section.Staged){const n=g.default.generatePatchFromChangeHunkView(i,t);return l.apply(e,n,{index:!0})}n.window.setStatusBarMessage("Already staged",h.StatusMessageDisplayTimeout)}else{if(i instanceof a.ChangeView){const t=i.change;return S(e,t.uri,t.section===m.Section.Unstaged)}if(i instanceof c.ChangeSectionView){switch(i.section){case m.Section.Untracked:return v(w.AllUntracked);case m.Section.Unstaged:return v(w.AllTracked)}}else if((null===(s=e.magitState)||void 0===s?void 0:s.workingTreeChanges.length)||(null===(d=e.magitState)||void 0===d?void 0:d.untrackedFiles.length)){const t=[...null===(p=e.magitState)||void 0===p?void 0:p.workingTreeChanges,...null===(f=e.magitState)||void 0===f?void 0:f.untrackedFiles].map(t=>({label:r.default.uriPathRelativeTo(t.uri,e.rootUri),meta:t.uri})),i=await u.QuickMenuUtil.showMenu(t,"Stage file");if(i)return S(e,i)}}}var w;async function v(e=w.AllTracked){return n.commands.executeCommand("git."+e.valueOf())}async function y(e,t,i){var s;if(i instanceof o.HunkView){if(i.changeHunk.section===m.Section.Staged){const n=g.default.generatePatchFromChangeHunkView(i,t,!0);return l.apply(e,n,{index:!0,reverse:!0})}n.window.setStatusBarMessage("Already unstaged",h.StatusMessageDisplayTimeout)}else{if(i instanceof a.ChangeView)return C(e,i.change.uri);if(i instanceof c.ChangeSectionView){if(i.section===m.Section.Staged)return b();n.window.setStatusBarMessage("Already unstaged",h.StatusMessageDisplayTimeout)}else{const t=(null===(s=e.magitState)||void 0===s?void 0:s.indexChanges).map(t=>({label:r.default.uriPathRelativeTo(t.uri,e.rootUri),meta:t.uri})),i=await u.QuickMenuUtil.showMenu(t,"Unstage file");if(i)return C(e,i)}}}async function b(){return n.commands.executeCommand("git.unstageAll")}async function S(e,t,i=!1){return e._repository.add([t],{update:i})}async function C(e,t){const i=["reset","--",t.fsPath];return d.gitRun(e,i)}t.magitStage=async function(e,t){const i=n.window.activeTextEditor.selection;return p.default.applyActionForSelection(e,t,i,[c.ChangeSectionView,a.ChangeView],f)},t.magitStageAll=async function(e,t){return v()},function(e){e.All="stageAll",e.AllTracked="stageAllTracked",e.AllUntracked="stageAllUntracked"}(w=t.StageAllKind||(t.StageAllKind={})),t.magitUnstage=async function(e,t){const i=n.window.activeTextEditor.selection;return p.default.applyActionForSelection(e,t,i,[c.ChangeSectionView,a.ChangeView],y)},t.magitUnstageAll=async function(e,t){if(await s.default.confirmAction("Unstage all changes?"))return b()},t.stageFile=S,t.unstageFile=C},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(3),o=i(5),a=i(2),s=i(15),r={title:"Cherry-picking",commands:[{label:"A",description:"Continue",action:async function({repository:e}){return s.runCommitLikeCommand(e,["cherry-pick","--continue"])}},{label:"s",description:"Skip",action:e=>d(e,"--skip")},{label:"a",description:"Abort",action:e=>d(e,"--abort")}]},c={title:"Cherry-picking",commands:[{label:"A",description:"Pick",action:async function({repository:e,switches:t}){const i=await a.default.chooseRef(e,"Cherry-pick");if(i)return m(e,i,{edit:!!(null==t?void 0:t.find(e=>"-e"===e.shortName&&e.activated))})}},{label:"a",description:"Apply",action:async function({repository:e}){const t=await a.default.chooseRef(e,"Apply changes from commit");if(t)return m(e,t,{noCommit:!0})}}]};async function m(e,t,{noCommit:i,edit:o}={}){const a=["cherry-pick"];if(i)a.push("--no-commit");else{if(o)return a.push("--edit"),a.push(t),s.runCommitLikeCommand(e,a,{updatePostCommitTask:!0});a.push("--ff")}return a.push(t),n.gitRun(e,a)}async function d({repository:e},t){const i=["cherry-pick",t];return n.gitRun(e,i)}t.cherryPicking=async function(e){var t;if(null===(t=e.magitState)||void 0===t?void 0:t.cherryPickingState)return o.MenuUtil.showMenu(r,{repository:e});{const t=[{shortName:"-e",longName:"--edit",description:"Edit commit messages"}];return o.MenuUtil.showMenu(c,{repository:e,switches:t})}},t.cherryPick=m},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MagitError=class{constructor(e,t){this.friendlyMessage=e,this.error=t,this.message=t.message,t.gitErrorCode&&(this.gitErrorCode=t.gitErrorCode)}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(3),a=i(72),s=i(8);t.blameFile=async function(e,t){const i=await o.gitRun(e,["blame",t.fsPath]),r=a.BlameView.encodeLocation(e,t);s.views.set(r.toString(),new a.BlameView(r,i.stdout)),n.workspace.openTextDocument(r).then(e=>n.window.showTextDocument(e,{preview:!1}))}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(77),o=i(8),a=i(0),s=i(2);t.processView=async function(e){const t=n.default.encodeLocation(e),i=o.views.get(t.toString());return i?i.update(e.magitState):o.views.set(t.toString(),new n.default(t)),a.workspace.openTextDocument(t).then(e=>a.window.showTextDocument(e,{viewColumn:s.default.showDocumentColumn(),preview:!1}))}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(3),o=i(5),a=i(2),s=i(15),r={title:"Reverting",commands:[{label:"V",description:"Continue",action:async function({repository:e}){return s.runCommitLikeCommand(e,["revert","--continue"])}},{label:"s",description:"Skip",action:e=>d(e,"--skip")},{label:"a",description:"Abort",action:e=>d(e,"--abort")}]},c={title:"Reverting",commands:[{label:"V",description:"Revert commit(s)",action:async function({repository:e,switches:t}){const i=await a.default.chooseRef(e,"Revert commit(s)",!0,!0);if(i)return m(e,i,{edit:!!(null==t?void 0:t.find(e=>"-e"===e.shortName&&e.activated))})}},{label:"v",description:"Revert changes",action:async function({repository:e}){const t=await a.default.chooseRef(e,"Revert changes",!0,!0);if(t)return m(e,t,{noCommit:!0})}}]};async function m(e,t,{noCommit:i,edit:o}={}){const a=["revert"];return i&&a.push("--no-commit"),o?(a.push("--edit"),a.push(t),s.runCommitLikeCommand(e,a,{updatePostCommitTask:!0})):(a.push("--no-edit"),a.push(t),n.gitRun(e,a))}async function d({repository:e},t){const i=["revert",t];return n.gitRun(e,i)}t.reverting=async function(e){var t;if(null===(t=e.magitState)||void 0===t?void 0:t.revertingState)return o.MenuUtil.showMenu(r,{repository:e});{const t=[{shortName:"-e",longName:"--edit",description:"Edit commit message",activated:!0},{shortName:"-E",longName:"--no-edit",description:"Don't edit commit message"}];return o.MenuUtil.showMenu(c,{repository:e,switches:t})}},t.revert=m},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(8),a=i(1),s=i(13),r=i(2);t.default=class{constructor(){this.viewUpdatedEmitter=new n.EventEmitter,this.onDidChange=this.viewUpdatedEmitter.event,this._subscriptions=n.Disposable.from(n.workspace.onDidCloseTextDocument(e=>{e.uri.scheme===a.MagitUriScheme&&o.views.delete(e.uri.toString())}),n.workspace.onDidSaveTextDocument(async e=>{for(const t of n.window.visibleTextEditors)if(t.document.uri.scheme===a.MagitUriScheme&&s.default.isDescendant(t.document.uri.query,e.uri.fsPath)){const e=await r.default.getCurrentMagitRepo(t.document.uri);if(!e)return;return r.default.magitStatusAndUpdate(e)}}))}dispose(){this._subscriptions.dispose(),this.viewUpdatedEmitter.dispose()}provideTextDocumentContent(e){const t=o.views.get(e.toString());return t?(t.emitter=this.viewUpdatedEmitter,t.render(0).join("\n")):""}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(1),o=i(20),a=i(6),s=i(11),r=i(16),c=i(12),m=i(4),d=i(9),u=i(0),l=i(37),g=i(40),h=i(41),p=i(42),f=i(43),w=i(44);class v extends s.DocumentView{constructor(e,t){super(e),this.provideContent(t)}provideContent(e){var t,i,s,u,v,y,b,S,C,x,M,k,P,R,D,T;this.subViews=[],e.latestGitError&&(this.addSubview(new m.TextView(`GitError! ${e.latestGitError.split(n.LineSplitterRegex)[0]} [ $ for detailed log ]`)),e.latestGitError=void 0),this.addSubview(new l.BranchHeaderSectionView(e.HEAD)),this.addSubview(new d.LineBreakView),e.mergingState&&this.addSubview(new g.MergingSectionView(e.mergingState)),e.rebasingState&&this.addSubview(new p.RebasingSectionView(e.rebasingState)),e.cherryPickingState&&this.addSubview(new f.CherryPickingSectionView(e.cherryPickingState,e.log)),e.revertingState&&this.addSubview(new w.RevertingSectionView(e.revertingState,e.log)),e.untrackedFiles.length&&this.addSubview(new o.ChangeSectionView(a.Section.Untracked,e.untrackedFiles)),(e.workingTreeChanges.length||e.mergeChanges.length)&&this.addSubview(new o.ChangeSectionView(a.Section.Unstaged,[...e.mergeChanges,...e.workingTreeChanges])),e.indexChanges.length&&this.addSubview(new o.ChangeSectionView(a.Section.Staged,e.indexChanges)),(null===(t=e.stashes)||void 0===t?void 0:t.length)&&this.addSubview(new r.StashSectionView(e.stashes)),(null===(u=null===(s=null===(i=e.HEAD)||void 0===i?void 0:i.upstreamRemote)||void 0===s?void 0:s.commitsAhead)||void 0===u?void 0:u.length)?this.addSubview(new h.UnsourcedCommitSectionView(a.Section.UnmergedInto,e.HEAD.upstreamRemote,e.HEAD.upstreamRemote.commitsAhead)):(null===(b=null===(y=null===(v=e.HEAD)||void 0===v?void 0:v.pushRemote)||void 0===y?void 0:y.commitsAhead)||void 0===b?void 0:b.length)&&this.addSubview(new h.UnsourcedCommitSectionView(a.Section.UnpushedTo,e.HEAD.pushRemote,e.HEAD.pushRemote.commitsAhead)),e.log.length>0&&!(null===(x=null===(C=null===(S=e.HEAD)||void 0===S?void 0:S.upstreamRemote)||void 0===C?void 0:C.commitsAhead)||void 0===x?void 0:x.length)&&this.addSubview(new c.CommitSectionView(a.Section.RecentCommits,e.log.slice(0,10))),(null===(P=null===(k=null===(M=e.HEAD)||void 0===M?void 0:M.upstreamRemote)||void 0===k?void 0:k.commitsBehind)||void 0===P?void 0:P.length)?this.addSubview(new h.UnsourcedCommitSectionView(a.Section.UnpulledFrom,e.HEAD.upstreamRemote,e.HEAD.upstreamRemote.commitsBehind)):(null===(T=null===(D=null===(R=e.HEAD)||void 0===R?void 0:R.pushRemote)||void 0===D?void 0:D.commitsBehind)||void 0===T?void 0:T.length)&&this.addSubview(new h.UnsourcedCommitSectionView(a.Section.UnpulledFrom,e.HEAD.pushRemote,e.HEAD.pushRemote.commitsBehind))}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return u.Uri.parse(`${n.MagitUriScheme}:${v.UriPath}?${e.rootUri.fsPath}`)}}t.default=v,v.UriPath="status.magit"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4);class o extends n.TextView{constructor(e){super(),this.change=e;const t=function(e){switch(e){case 0:case 5:return"modified";case 1:return"new file";case 2:case 6:return"deleted";case 3:return"renamed";case 4:return"copied";case 7:return"";case 10:case 11:case 12:case 13:case 14:case 15:case 16:return"unmerged";default:return""}}(this.change.status),i=function(e){switch(e){case 10:return"added by us";case 11:return"added by them";case 12:return"deleted by us";case 13:return"deleted by them";case 14:return"both added";case 15:return"both deleted";case 16:return"both modified";default:return}}(this.change.status);this.textContent=`${t?t+"   ":""}${this.change.relativePath}${i?` (${i})`:""}`}onClicked(){}}t.ChangeHeaderView=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(38),a=i(39),s=i(4);class r extends n.View{constructor(e){super(),this.isFoldable=!0,(null==e?void 0:e.commitDetails)?(this.addSubview(new o.BranchHeaderView("Head",e)),e.upstreamRemote&&this.addSubview(new a.RemoteBranchHeaderView(e.upstreamRemote.rebase?"Rebase":"Merge",e.upstreamRemote)),e.pushRemote&&this.addSubview(new a.RemoteBranchHeaderView("Push",e.pushRemote)),e.tag&&this.addSubview(new s.TextView("Tag: ".padEnd(10)+e.tag.name))):this.addSubview(new s.TextView("In the beginning there was darkness"))}get id(){return"HEAD_section"}}t.BranchHeaderSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4),o=i(10);class a extends n.TextView{constructor(e,t){var i;super();const n=(e+":").padEnd(10);this.textContent=`${n}${null!==(i=t.name)&&void 0!==i?i:o.default.shortHash(t.commit)} ${o.default.shortCommitMessage(t.commitDetails.message)}`}onClicked(){}}t.BranchHeaderView=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(4),o=i(10);class a extends n.TextView{constructor(e,t){var i;super();const n=(e+":").padEnd(10);this.textContent=`${n}${t.remote}/${t.name} ${o.default.shortCommitMessage(null===(i=t.commit)||void 0===i?void 0:i.message)}`}}t.RemoteBranchHeaderView=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(9),a=i(12),s=i(6);class r extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new s.SectionHeaderView(s.Section.Merging,e.commits.length,""+e.mergingBranches[0]),...e.commits.map(e=>new a.CommitItemView(e)),new o.LineBreakView]}get id(){return"Merging"}}t.MergingSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(6),a=i(9),s=i(12);class r extends n.View{constructor(e,t,i){super(),this.section=e,this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(e,i.length,`${t.remote}/${t.name}`),...i.map(e=>new s.CommitItemView(e)),new a.LineBreakView]}get id(){return this.section.toString()}}t.UnsourcedCommitSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(4),a=i(9),s=i(12);class r extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new c(`Rebasing ${e.origBranchName} onto ${e.ontoBranch.name}`),...e.upcomingCommits.map(e=>new s.CommitItemView(e,"pick")),new s.CommitItemView(e.currentCommit,"join"),...e.doneCommits.map(e=>new s.CommitItemView(e,"done")),new s.CommitItemView(e.ontoBranch.commitDetails,"onto"),new a.LineBreakView]}get id(){return"Rebasing"}}t.RebasingSectionView=r;class c extends o.TextView{constructor(e){super(e)}onClicked(){}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(9),a=i(6),s=i(12);class r extends n.View{constructor(e,t){super(),this.isFoldable=!0;const i=[];for(const n of t){if(n.hash===e.originalHead.hash)break;i.push(n)}this.subViews=[new a.SectionHeaderView(a.Section.CherryPicking),...e.upcomingCommits.map(e=>new s.CommitItemView(e,"pick")),new s.CommitItemView(e.currentCommit,"join"),...i.map(e=>new s.CommitItemView(e,"done")),new s.CommitItemView(e.originalHead,"onto"),new o.LineBreakView]}get id(){return"CherryPicking"}}t.CherryPickingSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(9),a=i(6),s=i(12);class r extends n.View{constructor(e,t){super(),this.isFoldable=!0;const i=[];for(const n of t){if(n.hash===e.originalHead.hash)break;i.push(n)}this.subViews=[new a.SectionHeaderView(a.Section.Reverting),...e.upcomingCommits.map(e=>new s.CommitItemView(e,"revert")),new s.CommitItemView(e.currentCommit,"join"),...i.map(e=>new s.CommitItemView(e,"done")),new s.CommitItemView(e.originalHead,"onto"),new o.LineBreakView]}get id(){return"Reverting"}}t.RevertingSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(8);t.default=class{static logGitCommand(e){const t={command:["git",...e],index:n.processLog.length};return n.processLog.push(t),t}static logGitResult(e,t){t.output=e.stdout}static logGitError(e,t){var i;const n=null!==(i=e.stderr)&&void 0!==i?i:e.message;t.output=n}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n={};t.getCommit=function(e,t){if(n[t])return n[t];const i=e.getCommit(t);return n[t]=i,i}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(5),a=i(14),s=i(10),r=i(3),c=i(2);async function m({repository:e,switches:t}){var i,n,a,s;const c=null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.pushRemote,m=null===(s=null===(a=e.magitState)||void 0===a?void 0:a.HEAD)||void 0===s?void 0:s.name;if((null==c?void 0:c.remote)&&m){const i=["push",...o.MenuUtil.switchesToArgs(t),c.remote,m];return r.gitRun(e,i)}}async function d({repository:e,...t}){var i,n;const o=e.state.remotes.map(e=>({label:e.name,description:e.pushUrl,meta:e.name})),s=await a.QuickMenuUtil.showMenu(o),r=null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.name;if(s&&r)return await e.setConfig(`branch.${r}.pushRemote`,s),e.magitState.HEAD.pushRemote={name:r,remote:s},m({repository:e,...t})}async function u({repository:e,switches:t}){var i,n,a,s;const c=null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.upstreamRemote,m=null===(s=null===(a=e.magitState)||void 0===a?void 0:a.HEAD)||void 0===s?void 0:s.name;if((null==c?void 0:c.remote)&&m){const i=["push",...o.MenuUtil.switchesToArgs(t),c.remote,m];return r.gitRun(e,i)}}async function l({repository:e,...t}){var i,n,o,r;let c=[...e.state.refs];e.state.remotes.length>0&&!c.find(t=>{var i,n;return t.name===e.state.remotes[0].name+"/"+(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.name)})&&(c=[{name:`${e.state.remotes[0].name}/${null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.name}`,remote:e.state.remotes[0].name,type:1},...c]);const m=c.filter(t=>{var i,n;return 2!==t.type&&t.name!==(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.name)}).sort((e,t)=>t.type-e.type).map(e=>({label:e.name,description:s.default.shortHash(e.commit),meta:e.name}));let d;try{d=await a.QuickMenuUtil.showMenu(m)}catch(e){}const l=null===(r=null===(o=e.magitState)||void 0===o?void 0:o.HEAD)||void 0===r?void 0:r.name;if(d&&l){const[i,n]=s.default.remoteBranchFullNameToSegments(d);if(i&&n)return await Promise.all([e.setConfig(`branch.${l}.merge`,"refs/heads/"+n),e.setConfig(`branch.${l}.remote`,i)]),e.magitState.HEAD.upstreamRemote={name:n,remote:i},u({repository:e,...t})}}async function g(){return n.commands.executeCommand("git.pushTo")}async function h({repository:e,switches:t}){var i,n,a,s,m,d,u;const l=null!==(s=null===(a=null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.upstreamRemote)||void 0===a?void 0:a.remote)&&void 0!==s?s:null===(u=null===(d=null===(m=e.magitState)||void 0===m?void 0:m.HEAD)||void 0===d?void 0:d.pushRemote)||void 0===u?void 0:u.remote,g=await c.default.chooseTag(e,"Push tag");if(l&&g){const i=["push",...o.MenuUtil.switchesToArgs(t),l,g];return r.gitRun(e,i)}}async function p({repository:e,switches:t}){var i,n,a,s,c,m,d;const u=null!==(s=null===(a=null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.upstreamRemote)||void 0===a?void 0:a.remote)&&void 0!==s?s:null===(d=null===(m=null===(c=e.magitState)||void 0===c?void 0:c.HEAD)||void 0===m?void 0:m.pushRemote)||void 0===d?void 0:d.remote;if(u){const i=["push",...o.MenuUtil.switchesToArgs(t),u,"--tags"];return r.gitRun(e,i)}}t.pushing=async function(e){return o.MenuUtil.showMenu(function(e){var t,i,n,o,a,s,r,c;const f=[];if(null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.pushRemote){const t=null===(o=null===(n=e.magitState)||void 0===n?void 0:n.HEAD)||void 0===o?void 0:o.pushRemote;f.push({label:"p",description:`${t.remote}/${t.name}`,action:m})}else f.push({label:"p",description:"pushRemote, after setting that",action:d});if(null===(s=null===(a=e.magitState)||void 0===a?void 0:a.HEAD)||void 0===s?void 0:s.upstream){const t=null===(c=null===(r=e.magitState)||void 0===r?void 0:r.HEAD)||void 0===c?void 0:c.upstream;f.push({label:"u",description:`${t.remote}/${t.name}`,action:u})}else f.push({label:"u",description:"@{upstream}, after setting that",action:l});return f.push({label:"e",description:"elsewhere",action:g}),f.push({label:"T",description:"a tag",action:h}),f.push({label:"t",description:"all tags",action:p}),{title:"Pushing",commands:f}}(e),{repository:e,switches:[{shortName:"-f",longName:"--force-with-lease",description:"Force with lease"},{shortName:"-F",longName:"--force",description:"Force"},{shortName:"-h",longName:"--no-verify",description:"Disable hooks"},{shortName:"-d",longName:"--dry-run",description:"Dry run"}]})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(8),a=i(5),s=i(3),r=i(2),c=i(49),m={title:"Branching",commands:[{label:"b",description:"Checkout",action:async function(e){return d(e,e.repository.state.refs)}},{label:"l",description:"Checkout local branch",action:async function(e){return d(e,e.repository.state.refs.filter(e=>0===e.type))}},{label:"c",description:"Checkout new branch",action:async function(e){return u(e,!0)}},{label:"n",description:"Create new branch",action:async function(e){return u(e,!1)}},{label:"m",description:"Rename",action:async function({repository:e}){const t=await r.default.chooseRef(e,"Rename branch",!0,!1,!1);if(t){const i=await n.window.showInputBox({prompt:`Rename branch '${t}' to:`});if(i&&i.length>0){const n=["branch","--move",t,i];return s.gitRun(e,n)}throw new Error("No name given for branch rename")}}},{label:"x",description:"Reset",action:async function({repository:e}){var t,i;const n=await r.default.chooseRef(e,"Reset branch",!0,!1,!1),o=await r.default.chooseRef(e,`Reset ${n} to`);if(n&&o){if(n!==(null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name)){const t=["update-ref","refs/heads/"+n,"refs/heads/"+o];return s.gitRun(e,t)}if(r.default.magitAnythingModified(e)&&await r.default.confirmAction("Uncommitted changes will be lost. Proceed?"))return e._repository.reset(o,!0)}}},{label:"k",description:"Delete",action:async function({repository:e}){const t=await r.default.chooseRef(e,"Delete",!1,!1,!1);if(t)try{await e.deleteBranch(t,!1)}catch(i){if("BranchNotFullyMerged"===i.gitErrorCode&&await r.default.confirmAction(`Delete unmerged branch ${t}?`))return e.deleteBranch(t,!0)}}}]};async function d({repository:e},t){const i=await r.default.chooseRef(e,"Checkout");if(i)return e.checkout(i)}async function u({repository:e},t){const i=await r.default.chooseRef(e,"Create and checkout branch starting at",!0,!0);if(i){const o=e.state.refs.find(e=>1===e.type&&e.name===i);let a="";if(o&&o.remote){const t=i.substring(o.remote.length+1);e.state.refs.find(e=>0===e.type&&e.name===t)||(a=t)}const s=await n.window.showInputBox({prompt:"Name for new branch",value:a});if(s&&s.length>0)return e.createBranch(s,t,i);throw new Error("No name given for new branch")}}t.branching=async function(e){return a.MenuUtil.showMenu(m,{repository:e})},t.showRefs=async function(e){const t=c.default.encodeLocation(e);return o.views.has(t.toString())||o.views.set(t.toString(),new c.default(t,e.magitState)),n.workspace.openTextDocument(t).then(e=>n.window.showTextDocument(e,{preview:!1}))}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(1),o=i(6),a=i(11),s=i(0),r=i(50),c=i(51),m=i(52);class d extends a.DocumentView{constructor(e,t){super(e),this.provideContent(t)}provideContent(e){this.subViews=[new o.SectionHeaderView(o.Section.HEAD),new c.BranchesSectionView(e.branches,e.HEAD),...e.remotes.map(e=>new m.RemoteSectionView(e)),new r.TagSectionView(e.tags)]}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return s.Uri.parse(`${n.MagitUriScheme}:${d.UriPath}?${e.rootUri.fsPath}`)}}t.default=d,d.UriPath="refs.magit"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(6),a=i(9),s=i(17);class r extends n.View{constructor(e){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Tags,e.length),...e.map(e=>new s.TagListingView(e)),new a.LineBreakView]}get id(){return o.Section.Tags.toString()}}t.TagSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(6),a=i(9),s=i(18);class r extends n.View{constructor(e,t){super(),this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Branches,e.length),...e.map(e=>new s.BranchListingView(e,e.name===(null==t?void 0:t.name))),new a.LineBreakView]}get id(){return o.Section.Branches.toString()}}t.BranchesSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),o=i(6),a=i(9),s=i(19);class r extends n.View{constructor(e){var t;super(),this.remote=e,this.isFoldable=!0,this.subViews=[new o.SectionHeaderView(o.Section.Remote,e.branches.length,`${e.name} (${null!==(t=e.fetchUrl)&&void 0!==t?t:e.pushUrl})`),...e.branches.map(e=>new s.RemoteBranchListingView(e)),new a.LineBreakView]}get id(){var e;return`${o.Section.Remote.toString()} ${this.remote.name} (${null!==(e=this.remote.fetchUrl)&&void 0!==e?e:this.remote.pushUrl})`}}t.RemoteSectionView=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(2),a=i(54),s=i(8),r=i(24);t.magitHelp=async function(e){let t=r.join(s.logPath,"..","..","..","..","User","keybindings.json"),i=[];try{const e=(await n.workspace.openTextDocument(t)).getText().replace(/\/\*[\s\S]*?\*\/|\/\/.*$/gm,"");i=JSON.parse(e)}catch(e){console.error(e)}const c=a.HelpView.encodeLocation(e);s.views.set(c.toString(),new a.HelpView(c,i)),n.workspace.openTextDocument(c).then(e=>n.window.showTextDocument(e,{viewColumn:o.default.showDocumentColumn(),preserveFocus:!0,preview:!1}))}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(11),o=i(0),a=i(1),s=i(4),r=i(55);class c extends n.DocumentView{constructor(e,t){super(e),this.isHighlightable=!1,this.needsUpdate=!1;let i=r.contributes.keybindings.reduce((e,t)=>({...e,[t.command]:c.keybindingToDisplayKey(t.key)}),{});i=t.reduce((e,t)=>({...e,[t.command]:c.keybindingToDisplayKey(t.key)}),i);const n=new s.TextView(c.createHelpText(i));n.isHighlightable=!1,this.addSubview(n)}update(e){}static encodeLocation(e){return o.Uri.parse(`${a.MagitUriScheme}:${c.UriPath}?${e.rootUri.path}#help`)}static joinTexts(e,t){let i=t.length>0?t[0]:"";for(let n=1;n<t.length;n++){const o=t[n-1],a=t[n],s=o.length<=e?e-o.length:0;i+=" ".repeat(s)+a}return i}static keybindingToDisplayKey(e){return/shift(\+|-)[a-zA-Z]/g.test(e)?e.substring(6).toLocaleUpperCase():"enter"===e?"RET":"tab"===e?"TAB":e}static createHelpText(e){return`Popup and dwim commands\n  ${c.joinTexts(19,[e["magit.cherry-picking"]+" Cherry-pick",e["magit.branching"]+" Branch",e["magit.commit"]+" Commit"])}\n  ${c.joinTexts(19,[e["magit.diffing"]+" Diff",e["magit.fetching"]+" Fetch",e["magit.pulling"]+" Pull"])}\n  ${c.joinTexts(19,[e["magit.ignoring"]+" Ignore",e["magit.logging"]+" Log",e["magit.merging"]+" Merge"])}\n  ${c.joinTexts(19,[e["magit.remoting"]+" Remote",e["magit.pushing"]+" Push",e["magit.rebasing"]+" Rebase"])}\n  ${c.joinTexts(19,[e["magit.tagging"]+" Tag",e["magit.reverting"]+" Revert",e["magit.resetting"]+" Reset"])}\n  ${c.joinTexts(19,[e["magit.show-refs"]+" Show Refs",e["magit.stashing"]+" Stash",e["magit.running"]+" Run"])}\n  ${e["magit.worktree"]} Worktree\n\nApplying changes\n  ${c.joinTexts(17,[e["magit.apply-at-point"]+" Apply",e["magit.stage"]+" Stage",e["magit.unstage"]+" Unstage"])}\n  ${c.joinTexts(17,[e["magit.reverse-at-point"]+" Reverse",e["magit.stage-all"]+" Stage all",e["magit.unstage-all"]+" Unstage all"])}\n  ${e["magit.discard-at-point"]} Discard\n\nEssential commands\n  ${c.joinTexts(9,[e["magit.refresh"],"refresh current buffer"])}\n  ${c.joinTexts(9,[e["magit.toggle-fold"],"toggle section at point"])}\n  ${c.joinTexts(9,[e["magit.visit-at-point"],"visit thing at point"])}\n  ${c.joinTexts(9,[e["magit.process-log"],"show git process view"])}\n  ${c.joinTexts(9,[e["magit.quit"],"exit / close magit view"])}`}}t.HelpView=c,c.UriPath="help.magit"},function(e){e.exports=JSON.parse('{"name":"magit","preview":true,"displayName":"edamagit","description":"Magit for Visual Studio Code","publisher":"kahole","author":{"name":"Kristian Andersen Hole"},"version":"0.2.6","engines":{"vscode":"^1.42.1"},"icon":"images/edamagit_logo.png","galleryBanner":{"color":"#000000","theme":"dark"},"categories":["Other"],"keywords":["magit","git","emacs","commit"],"license":"MIT","homepage":"https://github.com/kahole/edamagit/blob/master/README.md","repository":{"type":"git","url":"https://github.com/kahole/edamagit.git"},"bugs":{"url":"https://github.com/kahole/edamagit/issues"},"activationEvents":["onCommand:magit.status","onCommand:magit.dispatch","onCommand:magit.commit","onCommand:magit.file-popup","onCommand:magit.blame-file","onCommand:magit.stage-file","onCommand:magit.unstage-file","onCommand:magit.diff-file"],"main":"./dist/extension","contributes":{"commands":[{"command":"magit.status","title":"Magit Status"},{"command":"magit.dispatch","title":"Magit Dispatch"},{"command":"magit.file-popup","title":"Magit File Popup"},{"command":"magit.visit-at-point","title":"Magit Visit-at-point"},{"command":"magit.apply-at-point","title":"Magit Apply-at-point"},{"command":"magit.discard-at-point","title":"Magit Discard-at-point"},{"command":"magit.reverse-at-point","title":"Magit Reverse-at-point"},{"command":"magit.commit","title":"Magit Commit"},{"command":"magit.branching","title":"Magit Branching"},{"command":"magit.merging","title":"Magit Merging"},{"command":"magit.rebasing","title":"Magit Rebasing"},{"command":"magit.resetting","title":"Magit Resetting"},{"command":"magit.pushing","title":"Magit Pushing"},{"command":"magit.pulling","title":"Magit Pulling"},{"command":"magit.remoting","title":"Magit Remoting"},{"command":"magit.logging","title":"Magit Logging"},{"command":"magit.show-refs","title":"Magit Show Refs"},{"command":"magit.diffing","title":"Magit Diffing"},{"command":"magit.tagging","title":"Magit Tagging"},{"command":"magit.cherry-picking","title":"Magit Cherry Picking"},{"command":"magit.reverting","title":"Magit Reverting"},{"command":"magit.ignoring","title":"Magit Ignore"},{"command":"magit.running","title":"Magit Running"},{"command":"magit.worktree","title":"Magit Worktree"},{"command":"magit.stage","title":"Magit Stage"},{"command":"magit.stage-all","title":"Magit Stage All"},{"command":"magit.unstage","title":"Magit Unstage"},{"command":"magit.unstage-all","title":"Magit Unstage All"},{"command":"magit.help","title":"Magit Help"},{"command":"magit.stashing","title":"Magit Stashing"},{"command":"magit.fetching","title":"Magit Fetching"},{"command":"magit.process-log","title":"Magit Process Log"},{"command":"magit.blame-file","title":"Magit Blame File"},{"command":"magit.diff-file","title":"Magit Diff File"},{"command":"magit.stage-file","title":"Magit Stage File"},{"command":"magit.unstage-file","title":"Magit Unstage File"}],"menus":{"commandPalette":[{"command":"magit.status"},{"command":"magit.dispatch"},{"command":"magit.help","when":"editorLangId == magit"},{"command":"magit.branching","when":"editorLangId == magit"},{"command":"magit.merging","when":"editorLangId == magit"},{"command":"magit.rebasing","when":"editorLangId == magit"},{"command":"magit.resetting","when":"editorLangId == magit"},{"command":"magit.remoting","when":"editorLangId == magit"},{"command":"magit.logging","when":"editorLangId == magit"},{"command":"magit.show-refs","when":"editorLangId == magit"},{"command":"magit.diffing","when":"editorLangId == magit"},{"command":"magit.tagging","when":"editorLangId == magit"},{"command":"magit.cherry-picking","when":"editorLangId == magit"},{"command":"magit.reverting","when":"editorLangId == magit"},{"command":"magit.ignoring","when":"editorLangId == magit"},{"command":"magit.running","when":"editorLangId == magit"},{"command":"magit.worktree","when":"editorLangId == magit"},{"command":"magit.visit-at-point","when":"editorLangId == magit"},{"command":"magit.apply-at-point","when":"editorLangId == magit"},{"command":"magit.discard-at-point","when":"editorLangId == magit"},{"command":"magit.reverse-at-point","when":"editorLangId == magit"},{"command":"magit.stage","when":"editorLangId == magit"},{"command":"magit.stage-all","when":"editorLangId == magit"},{"command":"magit.unstage","when":"editorLangId == magit"},{"command":"magit.unstage-all","when":"editorLangId == magit"},{"command":"magit.commit","when":"activeEditor"},{"command":"magit.pushing","when":"editorLangId == magit"},{"command":"magit.pulling","when":"editorLangId == magit"},{"command":"magit.stashing","when":"editorLangId == magit"},{"command":"magit.fetching","when":"editorLangId == magit"},{"command":"magit.process-log","when":"editorLangId == magit"},{"command":"magit.file-popup","when":"activeEditor && editorLangId != magit"},{"command":"magit.blame-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.diff-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.stage-file","when":"activeEditor && editorLangId != magit"},{"command":"magit.unstage-file","when":"activeEditor && editorLangId != magit"}]},"languages":[{"id":"magit","aliases":["Magit"],"extensions":[".magit"],"configuration":"./languages/magit.language-configuration.json"}],"configurationDefaults":{"[magit]":{"editor.lineNumbers":"off","editor.lineHeight":15,"editor.minimap.enabled":false}},"configuration":{"title":"Magit","properties":{"magit.display-buffer-function":{"type":"string","enum":["other-column","same-column"],"default":"other-column","description":"Choose where new buffers will be displayed."}}},"grammars":[{"language":"magit","scopeName":"source.magit","path":"./syntaxes/magit.tmGrammar.json"}],"keybindings":[{"command":"magit.status","key":"alt+x g"},{"command":"magit.dispatch","key":"alt+x ctrl+g"},{"command":"magit.file-popup","key":"alt+x alt+g","when":"activeEditor"},{"command":"magit.toggle-fold","key":"tab","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.refresh","key":"g","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.help","key":"shift+/","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.visit-at-point","key":"enter","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.apply-at-point","key":"a","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.discard-at-point","key":"k","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reverse-at-point","key":"v","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.commit","key":"c","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.branching","key":"b","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.merging","key":"m","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.rebasing","key":"r","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.resetting","key":"shift+x","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reset-mixed","key":"x","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reset-hard","key":"ctrl+u x","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.remoting","key":"shift+m","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.logging","key":"l","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.show-refs","key":"y","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress|Visual).*$/"},{"command":"magit.diffing","key":"d","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.tagging","key":"t","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.cherry-picking","key":"shift+a","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.reverting","key":"shift+v","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.ignoring","key":"i","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.ignoring","key":"shift+i","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.running","key":"shift+1","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.worktree","key":"shift+5","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.pushing","key":"shift+p","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.pulling","key":"shift+f","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.stashing","key":"z","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.fetching","key":"f","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.stage","key":"s","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.stage-all","key":"shift+s","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.unstage","key":"u","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.unstage-all","key":"shift+u","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.process-log","key":"shift+4","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.quit","key":"q","when":"editorTextFocus && editorLangId == \'magit\' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"},{"command":"magit.save-and-close-editor","key":"ctrl+c ctrl+c","when":"editorTextFocus && editorLangId == git-commit"},{"command":"magit.clear-and-abort-editor","key":"ctrl+c ctrl+k","when":"editorTextFocus && editorLangId == git-commit"},{"command":"magit.save-and-close-editor","key":"ctrl+c ctrl+c","when":"editorTextFocus && editorLangId == git-rebase"},{"command":"magit.clear-and-abort-editor","key":"ctrl+c ctrl+k","when":"editorTextFocus && editorLangId == git-rebase"}]},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"webpack --mode development","watch":"webpack --mode development --watch --info-verbosity verbose","test-compile":"tsc -p ./"},"devDependencies":{"@types/glob":"^7.1.1","@types/mocha":"^7.0.1","@types/node":"^12.11.7","@types/vscode":"^1.42.1","@typescript-eslint/eslint-plugin":"^2.18.0","@typescript-eslint/parser":"^2.18.0","eslint":"^6.8.0","eslint-loader":"^4.0.2","glob":"^7.1.6","mocha":"^7.1.1","ts-loader":"^7.0.2","typescript":"^3.7.5","vscode-test":"^1.3.0","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"dependencies":{"date-fns":"^2.14.0"}}')},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(11),o=i(0),a=i(1),s=i(4);class r extends n.DocumentView{constructor(e,t){super(e),this.commit=t,this.isHighlightable=!1,this.needsUpdate=!1;const i=new s.TextView(t.diff);i.isHighlightable=!1,this.addSubview(i)}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${r.UriPath}?${e.rootUri.fsPath}#${t}`)}}t.CommitDetailView=r,r.UriPath="commit.magit"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(11),o=i(0),a=i(1),s=i(4);class r extends n.DocumentView{constructor(e,t){super(e),this.diff=t,this.isHighlightable=!1,this.needsUpdate=!1;const i=new s.TextView(t);i.isHighlightable=!1,this.addSubview(i)}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${r.UriPath}?${e.rootUri.fsPath}#${t}${r.index++}`)}}t.DiffView=r,r.UriPath="diff.magit",r.index=0},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(11),o=i(0),a=i(1),s=i(4);class r extends n.DocumentView{constructor(e,t,i){super(e),this.uri=e,this.needsUpdate=!1,this.addSubview(new s.TextView(`Stash@{${t.index}} ${t.description}`)),this.addSubview(new s.TextView(i))}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${r.UriPath}?${e.rootUri.fsPath}#stash@{${t.index}}#${r.index++}`)}}t.StashDetailView=r,r.UriPath="stash.magit",r.index=0},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(1),o=i(6),a=i(11),s=i(0),r=i(20);class c extends a.DocumentView{constructor(e,t,i){super(e),this.section=i,this.provideContent(t,!0)}provideContent(e,t=!1){let i;i=this.section===o.Section.Staged?new r.ChangeSectionView(o.Section.Staged,e.indexChanges,"sectionDiffView"):new r.ChangeSectionView(o.Section.Unstaged,e.workingTreeChanges,"sectionDiffView"),t&&i.subViews.forEach(e=>{e.folded=!1,e.subViews.forEach(e=>e.folded=!1)}),this.subViews=[i]}update(e){this.provideContent(e),this.triggerUpdate()}static encodeLocation(e){return s.Uri.parse(`${n.MagitUriScheme}:${c.UriPath}?${e.rootUri.fsPath}#${c.index++}`)}}t.default=c,c.UriPath="staged.magit",c.index=0},function(e,t){e.exports=require("process")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0);class o{static applyActionForSelection(e,t,i,n,a){if(!i.isSingleLine){let s=o.multilineClick(t,i,n);if(s.length>0){let t=s.map(t=>a(e,i,t));return Promise.all(t)}}const s=t.click(i.active);return a(e,i,s)}static multilineClick(e,t,i){let o=[],a=null;for(let s=t.start.line;s<=t.end.line;s++){let t=e.click(new n.Position(s,0));t&&i.find(e=>t instanceof e)&&(a||(a=t.constructor),a===t.constructor&&o.push(t))}return o}}t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0);async function o(){return await n.commands.executeCommand("workbench.action.files.save"),n.commands.executeCommand("workbench.action.closeActiveEditor")}t.saveClose=o,t.clearSaveClose=async function(e){return await e.edit(e=>{e.delete(new n.Range(0,0,1e3,0))}),o()},t.quitMagitView=async function(){return n.commands.executeCommand("workbench.action.closeActiveEditor")}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(8);t.default=class{dispose(){}provideDocumentHighlights(e,t,i){const a=[],s=o.views.get(e.uri.toString());if(s){const e=s.click(t);(null==e?void 0:e.isHighlightable)&&a.push(new n.DocumentHighlight(e.range,n.DocumentHighlightKind.Text))}return a}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(2),o=i(0),a=i(10),s=i(30);t.Command=class{static primeRepo(e,t=!0){return async i=>{const o=await n.default.getCurrentMagitRepo(i.document.uri);if(o)try{await e(o)}catch(e){this.handleError(o,e)}finally{t&&n.default.magitStatusAndUpdate(o)}}}static primeRepoAndView(e,t=!0){return async i=>{const[o,a]=n.default.getCurrentMagitRepoAndView(i.document.uri);if(o&&a)try{await e(o,a)}catch(e){this.handleError(o,e)}finally{t&&n.default.magitStatusAndUpdate(o)}}}static primeFileCommand(e,t=!0){return async i=>{const o=i.document.uri,a=n.default.getMagitRepoThatContainsFile(o);if(a)try{await e(a,o)}catch(e){this.handleError(a,e)}finally{t&&n.default.magitStatusAndUpdate(a)}}}static handleError(e,t){t.gitErrorCode||t.stderr||t instanceof s.MagitError?e.magitState.latestGitError=a.default.formatError(t):o.window.showErrorMessage(a.default.formatError(t))}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(5),a=i(3),s=i(14);async function r({repository:e,switches:t}){var i,n;if(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.pushRemote){const i=["fetch",...o.MenuUtil.switchesToArgs(t),e.magitState.HEAD.pushRemote.remote];return a.gitRun(e,i)}}async function c({repository:e,switches:t}){var i,n;if(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.upstreamRemote){const i=["fetch",...o.MenuUtil.switchesToArgs(t),e.magitState.HEAD.upstreamRemote.remote];return a.gitRun(e,i)}}async function m({repository:e,switches:t}){const i=e.state.remotes.map(e=>({label:e.name,description:e.pushUrl,meta:e.name})),n=await s.QuickMenuUtil.showMenu(i);if(n){const i=["fetch",...o.MenuUtil.switchesToArgs(t),n];return a.gitRun(e,i)}}async function d({repository:e,switches:t}){const i=["fetch",...o.MenuUtil.switchesToArgs(t),"--all"];return a.gitRun(e,i)}async function u({repository:e,switches:t}){const i=await n.window.showInputBox({prompt:"Fetch from remote or url"});if(i){const s=await n.window.showInputBox({prompt:"Fetch branch"});if(s){const n=["fetch",...o.MenuUtil.switchesToArgs(t),i,"refs/heads/"+s];return a.gitRun(e,n)}}}t.fetching=async function(e){var t,i,n,a,s,l,g,h;const p=[];if(null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.pushRemote){const t=null===(a=null===(n=e.magitState)||void 0===n?void 0:n.HEAD)||void 0===a?void 0:a.pushRemote;p.push({label:"p",description:t.remote,action:r})}if(null===(l=null===(s=e.magitState)||void 0===s?void 0:s.HEAD)||void 0===l?void 0:l.upstream){const t=null===(h=null===(g=e.magitState)||void 0===g?void 0:g.HEAD)||void 0===h?void 0:h.upstream;p.push({label:"u",description:t.remote,action:c})}return p.push({label:"e",description:"elsewhere",action:m}),p.push({label:"a",description:"all remotes",action:d}),p.push({label:"o",description:"another branch",action:u}),o.MenuUtil.showMenu({title:"Fetching",commands:p},{repository:e,switches:[{shortName:"-p",longName:"--prune",description:"Prune deleted branches"}]})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(0),a=i(3);function s({repository:e}){var t,i;const n=null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.pushRemote;if(n){const t=["pull",n.remote,n.name];return a.gitRun(e,t)}}function r({repository:e}){return a.gitRun(e,["pull"])}function c(){return o.commands.executeCommand("git.pullFrom")}t.pulling=async function(e){var t,i,o,a,m,d,u,l;const g=[];if(null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.pushRemote){const t=null===(a=null===(o=e.magitState)||void 0===o?void 0:o.HEAD)||void 0===a?void 0:a.pushRemote;g.push({label:"p",description:`${t.remote}/${t.name}`,action:s})}if(null===(d=null===(m=e.magitState)||void 0===m?void 0:m.HEAD)||void 0===d?void 0:d.upstream){const t=null===(l=null===(u=e.magitState)||void 0===u?void 0:u.HEAD)||void 0===l?void 0:l.upstream;g.push({label:"u",description:`${t.remote}/${t.name}`,action:r})}return g.push({label:"e",description:"elsewhere",action:c}),n.MenuUtil.showMenu({title:"Pulling",commands:g},{repository:e})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(0),a=i(3),s=i(10),r={title:"Stashing",commands:[{label:"z",description:"Save",action:c},{label:"p",description:"Pop",action:function(){return o.commands.executeCommand("git.stashPop")}},{label:"a",description:"Apply",action:function(){return o.commands.executeCommand("git.stashApply")}},{label:"k",description:"Drop",action:function(){return o.commands.executeCommand("git.stashDrop")}},{label:"i",description:"Save index",action:async function({repository:e,switches:t}){var i,n,o,s;if(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.commit){const i=await d(e);if(void 0!==i){const n=["commit","--message","intermediary stash commit"],r=["stash","push","--message","intermediary stash"],c=["reset","--soft",null===(s=null===(o=e.magitState)||void 0===o?void 0:o.HEAD)||void 0===s?void 0:s.commit],d=["stash","pop","--index","stash@{1}"];try{try{await a.gitRun(e,n),await a.gitRun(e,r),await a.gitRun(e,c)}catch(e){}return await m({repository:e,switches:t},i),a.gitRun(e,d)}catch(t){throw await a.gitRun(e,d),t}}}}},{label:"w",description:"Save worktree",action:async function({repository:e,switches:t}){var i,n,o,s;if(null===(n=null===(i=e.magitState)||void 0===i?void 0:i.HEAD)||void 0===n?void 0:n.commit){const i=await d(e);if(void 0!==i){const n=["commit","--message","intermediary stash commit"],r=["reset","--soft",null===(s=null===(o=e.magitState)||void 0===o?void 0:o.HEAD)||void 0===s?void 0:s.commit];try{try{await a.gitRun(e,n)}catch(e){}return await m({repository:e,switches:t},i),a.gitRun(e,r)}catch(t){throw await a.gitRun(e,r),t}}}}},{label:"x",description:"Save keeping index",action:e=>c(e,["--keep-index"])}]};async function c({repository:e,switches:t},i=[]){const n=await d(e);if(void 0!==n)return m({repository:e,switches:t},n,i)}async function m({repository:e,switches:t},i,o=[]){const s=["stash","push",...n.MenuUtil.switchesToArgs(t),...o];if(void 0!==i)return""!==i&&(s.push("--message"),s.push(i)),a.gitRun(e,s)}function d(e){var t,i,n,a,r;const c=`On ${null!==(n=null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name)&&void 0!==n?n:s.default.shortHash(null===(r=null===(a=e.magitState)||void 0===a?void 0:a.HEAD)||void 0===r?void 0:r.commit)}: `;return o.window.showInputBox({prompt:"Stash message: "+c})}t.stashing=async function(e){return n.MenuUtil.showMenu(r,{repository:e,switches:[{shortName:"-u",longName:"--include-untracked",description:"Also save untracked files"},{shortName:"-a",longName:"--all",description:"Also save untracked files and ignored files"}]})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(3),a=i(16),s=i(21),r=i(22),c=i(2),m=i(20),d=i(6),u=i(10),l=i(25),g=i(13),h=i(17),p=i(18),f=i(19),w=i(1);t.magitDiscardAtPoint=async function(e,t){const i=n.window.activeTextEditor.selection,v=t.click(i.active);if(v instanceof r.HunkView){if(await c.default.confirmAction("Discard hunk?"))return async function(e,t,i){const n=u.default.generatePatchFromChangeHunkView(t,i,!0);if(t.changeHunk.section===d.Section.Unstaged)return l.apply(e,n,{reverse:!0});if(t.changeHunk.section===d.Section.Staged)return await l.apply(e,n,{index:!0,reverse:!0}),l.apply(e,n,{reverse:!0});return Promise.reject()}(e,v,i)}else if(v instanceof s.ChangeView){const t=v.change;if(7===t.status){if(await c.default.confirmAction(`Trash ${t.relativePath}?`))return n.workspace.fs.delete(t.uri,{recursive:!0,useTrash:!1})}else{const i=t.section===d.Section.Staged?"staged":"unstaged";if(await c.default.confirmAction(`Discard ${i} ${t.relativePath}?`)){const i=["checkout","HEAD","--",t.uri.fsPath];return o.gitRun(e,i)}}}else if(v instanceof m.ChangeSectionView){const t=v;let i;switch(t.section){case d.Section.Untracked:if(i=t.changes.map(e=>g.default.fileName(e.uri)).join(", "),await c.default.confirmAction(`Trash ${i}?`))return n.commands.executeCommand("git.cleanAllUntracked");break;case d.Section.Unstaged:if(await c.default.confirmAction("Discard all unstaged changes?"))return n.commands.executeCommand("git.cleanAllTracked");break;case d.Section.Staged:if(await c.default.confirmAction("Discard all staged changes?")){const i=["checkout","HEAD","--",...t.changes.map(e=>e.uri.fsPath)];return o.gitRun(e,i)}}}else if(v instanceof a.StashSectionView){if(await c.default.confirmAction("Drop all stashes in ref/stash?")){const t=["stash","clear"];return o.gitRun(e,t)}}else if(v instanceof a.StashItemView){const t=v.stash;if(await c.default.confirmAction(`Drop stash stash@{${t.index}}?`)){const i=["stash","drop",`stash@{${t.index}}`];return o.gitRun(e,i)}}else if(v instanceof p.BranchListingView){const t=v.ref;if(t.name&&await c.default.confirmAction(`Delete branch ${t.name}?`))try{await o.gitRun(e,["branch","-d",t.name])}catch(i){if("BranchNotFullyMerged"===i.gitErrorCode&&await c.default.confirmAction(`Delete unmerged branch ${t.name}?`))return e.deleteBranch(t.name,!0)}}else if(v instanceof f.RemoteBranchListingView){const t=v.ref;if(t.name&&await c.default.confirmAction(`Delete branch ${t.name}?`)){const[i,n]=u.default.remoteBranchFullNameToSegments(t.name);try{await o.gitRun(e,["push","--delete",i,n])}catch(a){if("BranchNotFullyMerged"===a.gitErrorCode&&await c.default.confirmAction(`Delete unmerged branch ${t.name}?`))return o.gitRun(e,["push","--delete",i,n])}}}else if(v instanceof h.TagListingView){const t=v.ref;if(await c.default.confirmAction(`Delete tag ${t.name}?`)){const i=["tag","--delete",""+t.name];return o.gitRun(e,i)}}else n.window.setStatusBarMessage("There is no thing at point that could be deleted",w.StatusMessageDisplayTimeout)}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(3),a=i(15),s=i(2),r={title:"Merging",commands:[{label:"m",description:"Merge",action:m},{label:"e",description:"Merge and edit message",action:e=>m(e,!1,!1,!0)},{label:"n",description:"Merge, don't commit",action:e=>m(e,!0,!1,!1)},{label:"a",description:"Absorb",action:async function({repository:e}){const t=await s.default.chooseRef(e,"Absorb");if(t)return await d(e,t),await e.deleteBranch(t,!1)}},{label:"s",description:"Squash Merge",action:e=>m(e,!1,!0,!1)}]},c={title:"Merging",commands:[{label:"m",description:"Commit merge",action:async function(e){return a.commit(e)}},{label:"a",description:"Abort merge",action:async function({repository:e}){if(await s.default.confirmAction("Abort merge?")){const t=["merge","--abort"];return o.gitRun(e,t)}}}]};async function m({repository:e},t=!1,i=!1,n=!1){const o=await s.default.chooseRef(e,"Merge");if(o)return d(e,o,t,i,n)}async function d(e,t,i=!1,n=!1,s=!1){const r=["merge",t];return i&&r.push("--no-commit","--no-ff"),n&&r.push("--squash"),s?(r.push("--edit","--no-ff"),a.runCommitLikeCommand(e,r,{updatePostCommitTask:!0})):(r.push("--no-edit"),o.gitRun(e,r))}t.merging=async function(e){var t;return(null===(t=e.magitState)||void 0===t?void 0:t.mergingState)?n.MenuUtil.showMenu(c,{repository:e}):n.MenuUtil.showMenu(r,{repository:e})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(3),a=i(2),s=i(30),r=i(15),c={title:"Rebasing",commands:[{label:"r",description:"Continue",action:e=>u(e,"--continue")},{label:"s",description:"Skip",action:e=>u(e,"--skip")},{label:"e",description:"Edit",action:async function({repository:e}){return r.runCommitLikeCommand(e,["rebase","--edit-todo"],{editor:"GIT_SEQUENCE_EDITOR",propagateErrors:!0})}},{label:"a",description:"Abort",action:e=>u(e,"--abort")}]};async function m({repository:e,switches:t}){const i=await a.default.chooseRef(e,"Rebase");if(i)return d(e,i,t)}async function d(e,t,i=[]){const a=["rebase",...n.MenuUtil.switchesToArgs(i),t];try{return i.find(e=>e.activated&&"--interactive"===e.longName)?r.runCommitLikeCommand(e,a,{editor:"GIT_SEQUENCE_EDITOR"}):await o.gitRun(e,a)}catch(e){throw new s.MagitError("Failed to merge in the changes.",e)}}async function u({repository:e},t){const i=["rebase",t];return o.gitRun(e,i)}async function l({repository:e,switches:t}){const i=await a.default.chooseCommit(e,"Rebase commit and all above it");if(i){const o=(null!=t?t:[]).map(e=>({...e,activated:e.activated||"--interactive"===e.longName})),a=["rebase",...n.MenuUtil.switchesToArgs(o),i+"^"];return r.runCommitLikeCommand(e,a,{editor:"GIT_SEQUENCE_EDITOR"})}}t.rebasing=async function(e){var t,i;if(null===(t=e.magitState)||void 0===t?void 0:t.rebasingState)return n.MenuUtil.showMenu(c,{repository:e});{const t=[{shortName:"-k",longName:"--keep-empty",description:"Keep empty commits"},{shortName:"-p",longName:"--preserve-merges",description:"Preserve merges"},{shortName:"-c",longName:"--committer-date-is-author-date",description:"Lie about committer date"},{shortName:"-a",longName:"--autosquash",description:"Autosquash"},{shortName:"-A",longName:"--autostash",description:"Autostash"},{shortName:"-i",longName:"--interactive",description:"Interactive"},{shortName:"-h",longName:"--no-verify",description:"Disable hooks"}],o=null===(i=e.magitState)||void 0===i?void 0:i.HEAD,a=[];(null==o?void 0:o.pushRemote)&&a.push({label:"p",description:`onto ${o.pushRemote.remote}/${o.pushRemote.name}`,action:({switches:t})=>d(e,`${o.pushRemote.remote}/${o.pushRemote.name}`,t)}),(null==o?void 0:o.upstreamRemote)&&a.push({label:"u",description:`onto ${o.upstreamRemote.remote}/${o.upstreamRemote.name}`,action:({switches:t})=>d(e,`${o.upstreamRemote.remote}/${o.upstreamRemote.name}`,t)}),a.push({label:"e",description:"onto elsewhere",action:m},{label:"i",description:"interactively",action:l});const s={title:"Rebasing "+(null==o?void 0:o.name),commands:a};return n.MenuUtil.showMenu(s,{repository:e,switches:t})}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(15),a=i(28),s=i(31),r=i(23),c={title:"File Actions",commands:[{label:"s",description:"Stage",action:({repository:e,data:t})=>a.stageFile(e,t)},{label:"u",description:"Unstage",action:({repository:e,data:t})=>a.unstageFile(e,t)},{label:"c",description:"Commit",action:({repository:e})=>o.magitCommit(e)},{label:"d",description:"Diff",action:({repository:e,data:t})=>r.diffFile(e,t)},{label:"b",description:"Blame",action:({repository:e,data:t})=>s.blameFile(e,t)}]};t.filePopup=async function(e,t){return n.MenuUtil.showMenu(c,{repository:e,data:t})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(11),o=i(0),a=i(1),s=i(4);class r extends n.DocumentView{constructor(e,t){super(e),this.blame=t,this.isHighlightable=!1,this.needsUpdate=!1;const i=new s.TextView(t);i.isHighlightable=!1,this.addSubview(i)}update(e){}static encodeLocation(e,t){return o.Uri.parse(`${a.MagitUriScheme}:${r.UriPath}?${e.rootUri.fsPath}#${t.path}#${r.index++}`)}}t.BlameView=r,r.UriPath="blame.magit",r.index=0},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(11),o=i(0),a=i(1),s=i(4);class r extends n.DocumentView{constructor(e){super(e),this.uri=e,this.needsUpdate=!1,this.addSubview(new s.TextView("Popup and dwim commands\n    A Cherry-pick       b Branch            c Commit\n    d Diff              f Fetch             F Pull\n    i Ignore            l Log               m Merge\n    M Remote            P Push              r Rebase\n    t Tag               V Revert            X Reset\n    y Show Refs         z Stash             ! Run             % Worktree"))}update(e){}static encodeLocation(e){return o.Uri.parse(`${a.MagitUriScheme}:${r.UriPath}?${e.rootUri.fsPath}`)}}t.DispatchView=r,r.UriPath="dispatch.magit"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(0),a=i(3),s={title:"Remoting",commands:[{label:"a",description:"Add",action:async function(){return o.commands.executeCommand("git.addRemote")}},{label:"r",description:"Rename",action:async function({repository:e}){const t=await o.window.showQuickPick(e.state.remotes.map(e=>e.name),{placeHolder:"Rename remote"});if(t){const i=await o.window.showInputBox({prompt:`Rename ${t} to`});if(i){const n=["remote","rename",t,i];a.gitRun(e,n)}}}},{label:"k",description:"Remove",action:async function(){return o.commands.executeCommand("git.removeRemote")}}]};t.remoting=async function(e){return n.MenuUtil.showMenu(s,{repository:e})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(1),a=i(8),s=i(5),r=i(3),c=i(2),m=i(76),d={title:"Logging",commands:[{label:"l",description:"Log current",action:l((async function(e,t,i){const n=p(i);let o=t.name?[t.name]:await h(e);o&&await g(e,n,o)}))},{label:"o",description:"Log other",action:l((async function(e,t,i){const n=p(i),o=await h(e);o&&await g(e,n,o)}))},{label:"h",description:"Log HEAD",action:l((async function(e,t,i){const n=p(i);await g(e,n,["HEAD"])}))},{label:"L",description:"Log local branches",action:l((async function(e,t,i){var n;const o=p(i),a=[null!==(n=t.name)&&void 0!==n?n:"HEAD","--branches"];await g(e,o,a)}))},{label:"b",description:"Log branches",action:l((async function(e,t,i){var n;const o=p(i),a=[null!==(n=t.name)&&void 0!==n?n:"HEAD","--branches","--remotes"];await g(e,o,a)}))},{label:"a",description:"Log references",action:l((async function(e,t,i){var n;const o=p(i),a=[null!==(n=t.name)&&void 0!==n?n:"HEAD","--all"];await g(e,o,a)}))}]},u=[{shortName:"-D",longName:"--simplify-by-decoration",description:"Simplify by decoration"},{shortName:"-g",longName:"--graph",description:"Show graph",activated:!0},{shortName:"-d",longName:"--decorate",description:"Show refnames",activated:!0}];function l(e){return({repository:t,switches:i})=>{var n;if((null===(n=t.magitState)||void 0===n?void 0:n.HEAD)&&i)return e(t,t.magitState.HEAD,i)}}async function g(e,t,i){const o=function(e){const t=[],i=e.match(/[^\r\n]+/g),n=new RegExp("^([/|\\-_* .o]+)?([a-f0-9]{40})( \\(([^()]+)\\))?( \\[([^\\[\\]]+)\\])( \\[([^\\[\\]]+)\\])(.*)$","g"),o=/^[/|\\-_* .o]+$/g;return null==i||i.forEach(e=>{var i,a;if(e.match(o))null===(a=null===(i=t[t.length-1])||void 0===i?void 0:i.graph)||void 0===a||a.push(e);else{const i=e.matchAll(n).next().value;if(i&&i.length>0){const e=i[1],n={graph:e?[e]:void 0,refs:i[4],author:i[6],time:new Date(1e3*Number(i[8])),commit:{hash:i[2],message:i[9],parents:[],authorEmail:void 0}};t.push(n)}}}),t}((await r.gitRun(e,t.concat(i))).stdout),s=i.join(" "),d=m.default.encodeLocation(e);a.views.set(d.toString(),new m.default(d,{entries:o,revName:s})),n.workspace.openTextDocument(d).then(e=>n.window.showTextDocument(e,{viewColumn:c.default.showDocumentColumn(),preserveFocus:!1,preview:!1}))}async function h(e){var t,i;const a=null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name,s=await n.window.showInputBox({prompt:"Log rev,s:",placeHolder:a});return s&&s.length>0?s.split(/[, ]/g).filter(e=>e.length>0):a?[a]:void n.window.setStatusBarMessage("Nothing selected",o.StatusMessageDisplayTimeout)}function p(e){const t=e.reduce((e,t)=>(e[t.shortName]=t,e),{}),i=["log",`--format=%H${t["-d"].activated?"%d":""} [%an] [%at]%s`,"-n100","--use-mailmap"];return t["-D"].activated&&i.push(t["-D"].longName),t["-g"].activated&&i.push(t["-g"].longName),i}t.logging=async function(e){return s.MenuUtil.showMenu(d,{repository:e,switches:u})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(86),o=i(0),a=i(1),s=i(10),r=i(12),c=i(11),m=i(4);class d extends c.DocumentView{constructor(e,t){super(e),this.subViews=[new m.TextView("Commits in "+t.revName),...t.entries.map(e=>new u(e))]}update(e){}static encodeLocation(e){return o.Uri.parse(`${a.MagitUriScheme}:${d.UriPath}?${e.rootUri.fsPath}#${d.index++}`)}}t.default=d,d.UriPath="log.magit",d.index=0;class u extends r.CommitItemView{constructor(e){var t,i;super(e.commit),this.logEntry=e;const o=n.default(e.time),a=s.default.shortHash(e.commit.hash)+" ",r=null!==(i=null===(t=e.graph)||void 0===t?void 0:t[0])&&void 0!==i?i:"",c=e.refs?`(${e.refs}) `:"",m=s.default.shortCommitMessage(e.commit.message);if(this.textContent=l(`${a}${r}${c}${m}`,69,70)+l(e.author,17,18)+o,e.graph)for(let t=1;t<e.graph.length;t++){const i=e.graph[t],n=" ".repeat(8);this.textContent+=`\n${n}${i}`}}}function l(e,t,i){let n=e.length>=t?e.substr(0,t-1)+"…":e;return i&&(n=n.padEnd(i)),n}t.CommitLongFormItemView=u},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(1),o=i(11),a=i(0),s=i(8),r=i(7),c=i(4);class m extends r.View{constructor(e){super(),this.entry=e,this.isFoldable=!0,this.addSubview(new c.TextView(e.command.join(" "))),e.output&&this.addSubview(new c.TextView(e.output))}get id(){return""+this.entry.index}}class d extends o.DocumentView{constructor(e){super(e),this.provideContent()}provideContent(){s.processLog.length>0?this.subViews=s.processLog.map(e=>new m(e)):this.subViews=[new c.TextView("(No entries yet)")]}update(e){this.provideContent(),this.triggerUpdate()}static encodeLocation(e){return a.Uri.parse(`${n.MagitUriScheme}:${d.UriPath}?${e.rootUri.path}#process`)}}t.default=d,d.UriPath="process.magit"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(3),a=i(2),s=i(0),r={title:"Resetting",commands:[{label:"m",description:"reset mixed (HEAD and index)",action:({repository:e})=>c(e)},{label:"s",description:"reset soft (HEAD only)",action:({repository:e})=>{var t,i;return d(e,["--soft"],`Soft reset ${null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name} to`)}},{label:"h",description:"reset hard (HEAD, index and files)",action:({repository:e})=>m(e)},{label:"i",description:"reset index (only)",action:({repository:e})=>d(e,[],"Reset index to")},{label:"w",description:"reset worktree (only)",action:async function({repository:e}){var t,i;if(await s.window.showQuickPick([""+(null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name),"HEAD"],{placeHolder:"Reset worktree to"})){const t=["checkout-index","--all","--force"];return await o.gitRun(e,t)}}}]};async function c(e){var t,i;return d(e,["--mixed"],`Reset ${null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name} to`)}async function m(e){var t,i;return d(e,["--hard"],`Hard reset ${null===(i=null===(t=e.magitState)||void 0===t?void 0:t.HEAD)||void 0===i?void 0:i.name} to`)}async function d(e,t,i){const n=await a.default.chooseRef(e,i,!0,!0);if(n){const i=["reset",...t,n];return await o.gitRun(e,i)}}t.resetting=async function(e){return n.MenuUtil.showMenu(r,{repository:e})},t.resetMixed=c,t.resetHard=m},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(3),a=i(2),s=i(0),r={title:"Tagging",commands:[{label:"t",description:"Create",action:async function({repository:e,switches:t}){const i=await s.window.showInputBox({prompt:"Tag name"});if(i){const s=await a.default.chooseRef(e,"Place tag on",!0,!0);if(s){const a=["tag",...n.MenuUtil.switchesToArgs(t),i,s];return await o.gitRun(e,a)}}}},{label:"k",description:"Delete",action:async function({repository:e,switches:t}){const i=await a.default.chooseTag(e,"Delete tag");if(i){const a=["tag","-d",...n.MenuUtil.switchesToArgs(t),i];return await o.gitRun(e,a)}}}]};t.tagging=async function(e){return n.MenuUtil.showMenu(r,{repository:e,switches:[{shortName:"-f",longName:"--force",description:"Force"}]})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(3),a=i(2),s=i(0),r={title:"Worktree",commands:[{label:"b",description:"Create new worktree",action:async function({repository:e}){const t=await a.default.chooseRef(e,"Checkout ");if(t){const i=await s.window.showInputBox({value:e.rootUri.fsPath,prompt:"Create worktree"});if(i){const n=["worktree","add",i,t];return await o.gitRun(e,n)}}}},{label:"c",description:"Create new branch and worktree",action:async function({repository:e}){const t=await s.window.showInputBox({value:e.rootUri.fsPath,prompt:"Create worktree"});if(t){const i=await a.default.chooseRef(e,"Create and checkout branch starting at");if(i){const n=await s.window.showInputBox({prompt:"Name for new branch"});if(n){const a=["worktree","add","-b",n,t,i];return await o.gitRun(e,a)}}}}}]};t.worktree=async function(e){return n.MenuUtil.showMenu(r,{repository:e})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(14),a=i(13),s=i(82),r=i(0),c=i(83),m=i(1),d={title:"Ignoring",commands:[{label:"l",description:"Ignore locally",action:({repository:e})=>u(e)},{label:"g",description:"Ignore globally (add to .gitignore)",action:({repository:e})=>u(e,!0)}]};async function u(e,t=!1){var i;const n=[];null===(i=e.magitState)||void 0===i||i.untrackedFiles.forEach(e=>{const t=a.default.fileName(e.originalUri),i=a.default.fileExtension(t),o="/*."+i,s="*."+i;n.push({label:t,meta:t}),n.push({label:o,meta:o}),n.push({label:s,meta:s})});const d=await o.QuickMenuUtil.showMenuWithFreeform(n,"File or pattern to ignore "+(t?"globally":"locally"));if(d){let i;return i=t?e.rootUri.fsPath+"/.gitignore":e.rootUri.fsPath+"/.git/info/exclude",new Promise((e,t)=>{s.appendFile(i,c.EOL+d,n=>{n?t(n):(r.window.setStatusBarMessage("Wrote file "+i,m.StatusMessageDisplayTimeout),e())})})}}t.ignoring=async function(e){return n.MenuUtil.showMenu(d,{repository:e})}},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("os")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(5),o=i(0),a=i(3),s=i(32),r={title:"Running",commands:[{label:"!",description:"Git subcommand (in topdir)",action:({repository:e})=>c(e)},{label:"p",description:"Git subcommand (in pwd)",action:({repository:e})=>{var t;return c(e,null===(t=o.workspace.getWorkspaceFolder(e.rootUri))||void 0===t?void 0:t.uri)}}]};async function c(e,t){const i=await o.window.showInputBox({value:"git "});let n={};if(t&&(n.cwd=t.fsPath),i){const t=i.replace("git ","").split(" ");return await a.gitRun(e,t,n,a.LogLevel.Detailed),void await s.processView(e)}}t.running=async function(e){return n.MenuUtil.showMenu(r,{repository:e})}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0),o=i(12),a=i(16),s=i(18),r=i(19),c=i(17),m=i(33),d=i(2);t.reverseAtPoint=async function(e,t){const i=t.click(n.window.activeTextEditor.selection.active);if(i instanceof o.CommitItemView){const t=i.commit;return m.revert(e,t.hash,{noCommit:!0})}if(i instanceof s.BranchListingView||i instanceof r.RemoteBranchListingView||i instanceof c.TagListingView){const t=i.ref;if(t.commit)return m.revert(e,t.commit,{noCommit:!0})}else if(i instanceof a.StashItemView);else{const t=await d.default.chooseRef(e,"Revert changes",!0,!0);if(t)return m.revert(e,t,{noCommit:!0})}}},function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return b}));function n(e){return e.getTime()%6e4}function o(e){var t=new Date(e.getTime()),i=Math.ceil(t.getTimezoneOffset());return t.setSeconds(0,0),6e4*i+(i>0?(6e4+n(t))%6e4:n(t))}function a(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function s(e){a(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function r(e,t){a(2,arguments);var i=s(e),n=s(t),o=i.getTime()-n.getTime();return o<0?-1:o>0?1:o}function c(e,t){a(2,arguments);var i=s(e),n=s(t);return i.getTime()-n.getTime()}function m(e,t){a(2,arguments);var i=c(e,t)/1e3;return i>0?Math.floor(i):Math.ceil(i)}function d(e){return function(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var i in t=t||{})t.hasOwnProperty(i)&&(e[i]=t[i]);return e}({},e)}var u={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function l(e){return function(t){var i=t||{},n=i.width?String(i.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}var g={date:l({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:l({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:l({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},h={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function p(e){return function(t,i){var n,o=i||{};if("formatting"===(o.context?String(o.context):"standalone")&&e.formattingValues){var a=e.defaultFormattingWidth||e.defaultWidth,s=o.width?String(o.width):a;n=e.formattingValues[s]||e.formattingValues[a]}else{var r=e.defaultWidth,c=o.width?String(o.width):e.defaultWidth;n=e.values[c]||e.values[r]}return n[e.argumentCallback?e.argumentCallback(t):t]}}function f(e){return function(t,i){var n=String(t),o=i||{},a=o.width,s=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],r=n.match(s);if(!r)return null;var c,m=r[0],d=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth];return c="[object Array]"===Object.prototype.toString.call(d)?function(e,t){for(var i=0;i<e.length;i++)if(t(e[i]))return i}(d,(function(e){return e.test(m)})):function(e,t){for(var i in e)if(e.hasOwnProperty(i)&&t(e[i]))return i}(d,(function(e){return e.test(m)})),c=e.valueCallback?e.valueCallback(c):c,{value:c=o.valueCallback?o.valueCallback(c):c,rest:n.slice(m.length)}}}var w,v={code:"en-US",formatDistance:function(e,t,i){var n;return i=i||{},n="string"==typeof u[e]?u[e]:1===t?u[e].one:u[e].other.replace("{{count}}",t),i.addSuffix?i.comparison>0?"in "+n:n+" ago":n},formatLong:g,formatRelative:function(e,t,i,n){return h[e]},localize:{ordinalNumber:function(e,t){var i=Number(e),n=i%100;if(n>20||n<10)switch(n%10){case 1:return i+"st";case 2:return i+"nd";case 3:return i+"rd"}return i+"th"},era:p({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:p({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return Number(e)-1}}),month:p({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:p({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:p({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(w={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e,t){var i=String(e),n=t||{},o=i.match(w.matchPattern);if(!o)return null;var a=o[0],s=i.match(w.parsePattern);if(!s)return null;var r=w.valueCallback?w.valueCallback(s[0]):s[0];return{value:r=n.valueCallback?n.valueCallback(r):r,rest:i.slice(a.length)}}),era:f({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:f({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:f({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:f({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:f({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function y(e,t,i){a(2,arguments);var n=i||{},c=n.locale||v;if(!c.formatDistance)throw new RangeError("locale must contain localize.formatDistance property");var u=r(e,t);if(isNaN(u))throw new RangeError("Invalid time value");var l,g,h=d(n);h.addSuffix=Boolean(n.addSuffix),h.comparison=u,u>0?(l=s(t),g=s(e)):(l=s(e),g=s(t));var p,f=null==n.roundingMethod?"round":String(n.roundingMethod);if("floor"===f)p=Math.floor;else if("ceil"===f)p=Math.ceil;else{if("round"!==f)throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");p=Math.round}var w,y=m(g,l),b=(o(g)-o(l))/1e3,S=p((y-b)/60);if("second"===(w=null==n.unit?S<1?"second":S<60?"minute":S<1440?"hour":S<43200?"day":S<525600?"month":"year":String(n.unit)))return c.formatDistance("xSeconds",y,h);if("minute"===w)return c.formatDistance("xMinutes",S,h);if("hour"===w){var C=p(S/60);return c.formatDistance("xHours",C,h)}if("day"===w){var x=p(S/1440);return c.formatDistance("xDays",x,h)}if("month"===w){var M=p(S/43200);return c.formatDistance("xMonths",M,h)}if("year"===w){var k=p(S/525600);return c.formatDistance("xYears",k,h)}throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'")}function b(e,t){return a(1,arguments),y(e,Date.now(),t)}}]);
//# sourceMappingURL=extension.js.map